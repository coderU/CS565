DIGEST 238995b196bb1709be1e4a9005a2de09
FPoly
R132:136 Lists <> <> lib
ind 672:679 <> boollist
constr 695:702 <> bool_nil
constr 719:727 <> bool_cons
R706:713 Poly <> boollist ind
R751:758 Poly <> boollist ind
R739:746 Poly <> boollist ind
R731:734 Basics <> bool ind
ind 1231:1234 <> list
constr 1259:1261 <> nil
constr 1276:1279 <> cons
R1265:1268 Poly <> list ind
R1298:1301 Poly <> list ind
R1288:1291 Poly <> list ind
R2493:2495 Poly <> nil constr
R2546:2549 Poly <> cons constr
R3308:3311 Poly <> cons constr
R3320:3323 Poly <> cons constr
R3332:3334 Poly <> nil constr
R3336:3338 Coq.Init.Datatypes <> nat ind
R3325:3327 Coq.Init.Datatypes <> nat ind
R3313:3315 Coq.Init.Datatypes <> nat ind
def 3719:3724 <> length
R3738:3741 Poly <> list ind
R3743:3743 Poly <> X var
R3748:3750 Coq.Init.Datatypes <> nat ind
R3764:3764 Poly <> l var
R3775:3777 Poly <> nil constr
R3793:3796 Poly <> cons constr
R3805:3805 Coq.Init.Datatypes <> S constr
R3808:3813 Poly <> length def
R3815:3815 Poly <> X var
def 4349:4360 <> test_length1
R4414:4416 Coq.Init.Logic <> :type_scope:x_'='_x not
R4368:4373 Poly <> length def
R4380:4383 Poly <> cons constr
R4392:4395 Poly <> cons constr
R4404:4406 Poly <> nil constr
R4408:4410 Coq.Init.Datatypes <> nat ind
R4397:4399 Coq.Init.Datatypes <> nat ind
R4385:4387 Coq.Init.Datatypes <> nat ind
R4375:4377 Coq.Init.Datatypes <> nat ind
def 4573:4584 <> test_length2
R4631:4633 Coq.Init.Logic <> :type_scope:x_'='_x not
R4592:4597 Poly <> length def
R4605:4608 Poly <> cons constr
R4621:4623 Poly <> nil constr
R4625:4628 Basics <> bool ind
R4615:4618 Basics <> true constr
R4610:4613 Basics <> bool ind
R4599:4602 Basics <> bool ind
def 4798:4800 <> app
R4822:4825 Poly <> list ind
R4827:4827 Poly <> X var
R4850:4853 Poly <> list ind
R4855:4855 Poly <> X var
R4870:4871 Poly <> l1 var
R4882:4884 Poly <> nil constr
R4894:4895 Poly <> l2 var
R4901:4904 Poly <> cons constr
R4913:4916 Poly <> cons constr
R4923:4925 Poly <> app def
R4931:4932 Poly <> l2 var
R4927:4927 Poly <> X var
R4918:4918 Poly <> X var
def 4952:4955 <> snoc
R4969:4972 Poly <> list ind
R4974:4974 Poly <> X var
R4980:4980 Poly <> X var
R4986:4989 Poly <> list ind
R4991:4991 Poly <> X var
R5006:5006 Poly <> l var
R5017:5019 Poly <> nil constr
R5029:5032 Poly <> cons constr
R5039:5041 Poly <> nil constr
R5043:5043 Poly <> X var
R5036:5036 Poly <> v var
R5034:5034 Poly <> X var
R5050:5053 Poly <> cons constr
R5062:5065 Poly <> cons constr
R5072:5075 Poly <> snoc def
R5081:5081 Poly <> v var
R5077:5077 Poly <> X var
R5067:5067 Poly <> X var
def 5101:5103 <> rev
R5117:5120 Poly <> list ind
R5122:5122 Poly <> X var
R5127:5130 Poly <> list ind
R5132:5132 Poly <> X var
R5146:5146 Poly <> l var
R5157:5159 Poly <> nil constr
R5169:5171 Poly <> nil constr
R5173:5173 Poly <> X var
R5179:5182 Poly <> cons constr
R5191:5194 Poly <> snoc def
R5199:5201 Poly <> rev def
R5203:5203 Poly <> X var
R5196:5196 Poly <> X var
def 5226:5234 <> test_rev1
R5285:5291 Coq.Init.Logic <> :type_scope:x_'='_x not
R5325:5325 Coq.Init.Logic <> :type_scope:x_'='_x not
R5242:5244 Poly <> rev def
R5251:5254 Poly <> cons constr
R5263:5266 Poly <> cons constr
R5275:5277 Poly <> nil constr
R5279:5281 Coq.Init.Datatypes <> nat ind
R5268:5270 Coq.Init.Datatypes <> nat ind
R5256:5258 Coq.Init.Datatypes <> nat ind
R5246:5248 Coq.Init.Datatypes <> nat ind
R5292:5295 Poly <> cons constr
R5304:5307 Poly <> cons constr
R5316:5318 Poly <> nil constr
R5320:5322 Coq.Init.Datatypes <> nat ind
R5309:5311 Coq.Init.Datatypes <> nat ind
R5297:5299 Coq.Init.Datatypes <> nat ind
def 5363:5371 <> test_rev2
R5396:5398 Coq.Init.Logic <> :type_scope:x_'='_x not
R5377:5379 Poly <> rev def
R5387:5389 Poly <> nil constr
R5391:5394 Basics <> bool ind
R5381:5384 Basics <> bool ind
R5399:5401 Poly <> nil constr
R5403:5406 Basics <> bool ind
def 5695:5698 <> app'
R5710:5713 Poly <> list ind
R5715:5715 Poly <> X var
R5729:5730 Poly <> l1 var
R5741:5743 Poly <> nil constr
R5753:5754 Poly <> l2 var
R5760:5763 Poly <> cons constr
R5772:5775 Poly <> cons constr
R5782:5785 Poly <> app' def
R5791:5792 Poly <> l2 var
R5787:5787 Poly <> X var
R5777:5777 Poly <> X var
R5882:5885 Poly <> app' def
R5894:5896 Poly <> app def
def 8487:8493 <> length'
R8507:8510 Poly <> list ind
R8512:8512 Poly <> X var
R8517:8519 Coq.Init.Datatypes <> nat ind
R8533:8533 Poly <> l var
R8544:8546 Poly <> nil constr
R8562:8565 Poly <> cons constr
R8574:8574 Coq.Init.Datatypes <> S constr
R8577:8583 Poly <> length' def
def 8872:8878 <> list123
R8886:8889 Poly <> cons constr
R8898:8901 Poly <> cons constr
R8910:8913 Poly <> cons constr
R8922:8924 Poly <> nil constr
R8926:8928 Coq.Init.Datatypes <> nat ind
R8915:8917 Coq.Init.Datatypes <> nat ind
R8903:8905 Coq.Init.Datatypes <> nat ind
R8891:8893 Coq.Init.Datatypes <> nat ind
def 9002:9009 <> list123'
R9014:9017 Poly <> cons constr
R9024:9027 Poly <> cons constr
R9034:9037 Poly <> cons constr
R9044:9046 Poly <> nil constr
R9346:9348 Poly <> nil constr
R9376:9379 Poly <> cons constr
R9407:9412 Poly <> length def
R9440:9442 Poly <> app def
R9470:9472 Poly <> rev def
R9500:9503 Poly <> snoc def
def 9563:9571 <> list123''
R9576:9579 Poly <> cons constr
R9584:9587 Poly <> cons constr
R9592:9595 Poly <> cons constr
R9599:9601 Poly <> nil constr
R9613:9618 Poly <> length def
R9620:9628 Poly <> list123'' def
def 9812:9819 <> length''
R9833:9836 Poly <> list ind
R9838:9838 Poly <> X var
R9843:9845 Coq.Init.Datatypes <> nat ind
R9859:9859 Poly <> l var
R9870:9872 Poly <> nil constr
R9888:9891 Poly <> cons constr
R9900:9900 Coq.Init.Datatypes <> S constr
R9903:9910 Poly <> length'' def
def 10881:10885 <> mynil
R10889:10892 Poly <> list ind
R10894:10896 Coq.Init.Datatypes <> nat ind
R10901:10903 Poly <> nil constr
R11032:11034 Poly <> nil constr
def 11049:11054 <> mynil'
R11060:11062 Poly <> nil constr
R11064:11066 Coq.Init.Datatypes <> nat ind
R11349:11352 Poly <> cons constr
not 11336 <> ::x_'::'_x
R11435:11437 Poly <> nil constr
not 11426 <> ::'['_']'
R11470:11473 Poly <> cons constr
R11481:11484 Poly <> cons constr
R11488:11489 Poly <> ::'['_']' not
not 11449 <> ::'['_x_','_'..'_','_x_']'
R11519:11521 Poly <> app def
not 11506 <> ::x_'++'_x
def 11655:11664 <> list123'''
R11669:11669 Poly <> ::'['_x_','_'..'_','_x_']' not
R11671:11672 Poly <> ::'['_x_','_'..'_','_x_']' not
R11674:11675 Poly <> ::'['_x_','_'..'_','_x_']' not
R11677:11677 Poly <> ::'['_x_','_'..'_','_x_']' not
def 12025:12030 <> repeat
R12048:12048 Poly <> X var
R12060:12062 Coq.Init.Datatypes <> nat ind
R12067:12070 Poly <> list ind
R12072:12072 Poly <> X var
R12099:12103 Basics <> admit prfax
def 12115:12126 <> test_repeat1
R12150:12152 Coq.Init.Logic <> :type_scope:x_'='_x not
R12132:12137 Poly <> repeat def
R12144:12147 Basics <> true constr
R12139:12142 Basics <> bool ind
R12153:12156 Poly <> cons constr
R12164:12167 Poly <> cons constr
R12174:12176 Poly <> nil constr
R12169:12172 Basics <> true constr
R12158:12161 Basics <> true constr
prf 12219:12225 <> nil_app
R12253:12256 Poly <> list ind
R12258:12258 Poly <> X var
R12272:12274 Coq.Init.Logic <> :type_scope:x_'='_x not
R12264:12266 Poly <> app def
R12271:12271 Poly <> l var
R12268:12269 Poly <> ::'['_']' not
R12275:12275 Poly <> l var
prf 12325:12332 <> rev_snoc
R12386:12386 Poly <> X var
R12421:12424 Poly <> list ind
R12426:12426 Poly <> X var
R12445:12447 Coq.Init.Logic <> :type_scope:x_'='_x not
R12431:12433 Poly <> rev def
R12436:12439 Poly <> snoc def
R12443:12443 Poly <> v var
R12441:12441 Poly <> s var
R12449:12453 Poly <> ::x_'::'_x not
R12459:12459 Poly <> ::x_'::'_x not
R12448:12448 Poly <> v var
R12454:12456 Poly <> rev def
R12458:12458 Poly <> s var
prf 12509:12522 <> rev_involutive
R12554:12557 Poly <> list ind
R12559:12559 Poly <> X var
R12575:12577 Coq.Init.Logic <> :type_scope:x_'='_x not
R12564:12566 Poly <> rev def
R12569:12571 Poly <> rev def
R12573:12573 Poly <> l var
R12578:12578 Poly <> l var
prf 12626:12641 <> snoc_with_append
R12703:12706 Poly <> list ind
R12708:12708 Poly <> X var
R12747:12747 Poly <> X var
R12769:12771 Coq.Init.Logic <> :type_scope:x_'='_x not
R12752:12755 Poly <> snoc def
R12768:12768 Poly <> v var
R12760:12763 Poly <> ::x_'++'_x not
R12758:12759 Poly <> l1 var
R12764:12765 Poly <> l2 var
R12774:12778 Poly <> ::x_'++'_x not
R12788:12788 Poly <> ::x_'++'_x not
R12772:12773 Poly <> l1 var
R12779:12782 Poly <> snoc def
R12787:12787 Poly <> v var
R12784:12785 Poly <> l2 var
ind 13112:13115 <> prod
constr 13142:13145 <> pair
R13159:13162 Poly <> prod ind
R13189:13192 Poly <> pair constr
R13337:13340 Poly <> pair constr
not 13321 <> ::'('_x_','_x_')'
R13473:13476 Poly <> prod ind
not 13461 <> :type_scope:x_'*'_x
def 14088:14090 <> fst
R14111:14113 Poly <> :type_scope:x_'*'_x not
R14110:14110 Poly <> X var
R14114:14114 Poly <> Y var
R14119:14119 Poly <> X var
R14133:14133 Poly <> p var
R14140:14140 Poly <> ::'('_x_','_x_')' not
R14142:14142 Poly <> ::'('_x_','_x_')' not
R14144:14144 Poly <> ::'('_x_','_x_')' not
def 14168:14170 <> snd
R14191:14193 Poly <> :type_scope:x_'*'_x not
R14190:14190 Poly <> X var
R14194:14194 Poly <> Y var
R14199:14199 Poly <> Y var
R14213:14213 Poly <> p var
R14220:14220 Poly <> ::'('_x_','_x_')' not
R14222:14222 Poly <> ::'('_x_','_x_')' not
R14224:14224 Poly <> ::'('_x_','_x_')' not
def 14565:14571 <> combine
R14592:14595 Poly <> list ind
R14597:14597 Poly <> X var
R14606:14609 Poly <> list ind
R14611:14611 Poly <> Y var
R14628:14631 Poly <> list ind
R14635:14635 Poly <> :type_scope:x_'*'_x not
R14634:14634 Poly <> X var
R14636:14636 Poly <> Y var
R14650:14650 Poly <> ::'('_x_','_x_')' not
R14653:14653 Poly <> ::'('_x_','_x_')' not
R14656:14656 Poly <> ::'('_x_','_x_')' not
R14651:14652 Poly <> lx var
R14654:14655 Poly <> ly var
R14667:14667 Poly <> ::'('_x_','_x_')' not
R14670:14670 Poly <> ::'('_x_','_x_')' not
R14672:14672 Poly <> ::'('_x_','_x_')' not
R14668:14669 Poly <> ::'['_']' not
R14677:14678 Poly <> ::'['_']' not
R14684:14684 Poly <> ::'('_x_','_x_')' not
R14686:14686 Poly <> ::'('_x_','_x_')' not
R14689:14689 Poly <> ::'('_x_','_x_')' not
R14687:14688 Poly <> ::'['_']' not
R14694:14695 Poly <> ::'['_']' not
R14701:14701 Poly <> ::'('_x_','_x_')' not
R14707:14708 Poly <> ::'('_x_','_x_')' not
R14714:14714 Poly <> ::'('_x_','_x_')' not
R14703:14704 Poly <> ::x_'::'_x not
R14710:14711 Poly <> ::x_'::'_x not
R14724:14728 Poly <> ::x_'::'_x not
R14742:14742 Poly <> ::x_'::'_x not
R14719:14719 Poly <> ::'('_x_','_x_')' not
R14721:14721 Poly <> ::'('_x_','_x_')' not
R14723:14723 Poly <> ::'('_x_','_x_')' not
R14729:14735 Poly <> combine def
def 14847:14854 <> combine'
R14875:14878 Poly <> list ind
R14880:14880 Poly <> X var
R14889:14892 Poly <> list ind
R14894:14894 Poly <> Y var
R14911:14914 Poly <> list ind
R14918:14918 Poly <> :type_scope:x_'*'_x not
R14917:14917 Poly <> X var
R14919:14919 Poly <> Y var
R14936:14937 Poly <> ly var
R14933:14934 Poly <> lx var
R14948:14949 Poly <> ::'['_']' not
R14956:14957 Poly <> ::'['_']' not
R14965:14966 Poly <> ::'['_']' not
R14971:14972 Poly <> ::'['_']' not
R14979:14980 Poly <> ::x_'::'_x not
R14986:14987 Poly <> ::x_'::'_x not
R14999:15003 Poly <> ::x_'::'_x not
R15018:15018 Poly <> ::x_'::'_x not
R14994:14994 Poly <> ::'('_x_','_x_')' not
R14996:14996 Poly <> ::'('_x_','_x_')' not
R14998:14998 Poly <> ::'('_x_','_x_')' not
R15004:15011 Poly <> combine' def
R15033:15039 Poly <> combine def
R15056:15062 Poly <> combine def
R15070:15070 Poly <> ::'['_x_','_'..'_','_x_']' not
R15076:15077 Poly <> ::'['_x_','_'..'_','_x_']' not
R15083:15084 Poly <> ::'['_x_','_'..'_','_x_']' not
R15089:15090 Poly <> ::'['_x_','_'..'_','_x_']' not
R15095:15095 Poly <> ::'['_x_','_'..'_','_x_']' not
R15091:15094 Basics <> true constr
R15085:15088 Basics <> true constr
R15078:15082 Basics <> false constr
R15071:15075 Basics <> false constr
R15064:15064 Poly <> ::'['_x_','_'..'_','_x_']' not
R15066:15066 Poly <> ::'['_x_','_'..'_','_x_']' not
R15068:15068 Poly <> ::'['_x_','_'..'_','_x_']' not
def 15796:15800 <> split
R15818:15821 Poly <> list ind
R15825:15825 Poly <> :type_scope:x_'*'_x not
R15824:15824 Poly <> X var
R15826:15826 Poly <> Y var
R15837:15839 Poly <> :type_scope:x_'*'_x not
R15831:15834 Poly <> list ind
R15836:15836 Poly <> X var
R15840:15843 Poly <> list ind
R15845:15845 Poly <> Y var
R15857:15857 Poly <> l var
R15870:15871 Poly <> ::'['_']' not
R15876:15876 Poly <> ::'('_x_','_x_')' not
R15879:15879 Poly <> ::'('_x_','_x_')' not
R15882:15882 Poly <> ::'('_x_','_x_')' not
R15877:15878 Poly <> ::'['_']' not
R15880:15881 Poly <> ::'['_']' not
R15895:15898 Poly <> ::x_'::'_x not
R15890:15890 Poly <> ::'('_x_','_x_')' not
R15892:15892 Poly <> ::'('_x_','_x_')' not
R15894:15894 Poly <> ::'('_x_','_x_')' not
R15911:15915 Poly <> split def
R15950:15950 Poly <> ::'('_x_','_x_')' not
R15953:15954 Poly <> ::'('_x_','_x_')' not
R15957:15957 Poly <> ::'('_x_','_x_')' not
R15962:15963 Poly <> ::'('_x_','_x_')' not
R15971:15972 Poly <> ::'('_x_','_x_')' not
R15980:15980 Poly <> ::'('_x_','_x_')' not
R15965:15968 Poly <> ::x_'::'_x not
R15974:15977 Poly <> ::x_'::'_x not
R16029:16033 Poly <> split def
R16035:16035 Poly <> ::'['_x_','_'..'_','_x_']' not
R16045:16045 Poly <> ::'['_x_','_'..'_','_x_']' not
R16055:16055 Poly <> ::'['_x_','_'..'_','_x_']' not
R16046:16046 Poly <> ::'('_x_','_x_')' not
R16048:16048 Poly <> ::'('_x_','_x_')' not
R16054:16054 Poly <> ::'('_x_','_x_')' not
R16049:16053 Basics <> false constr
R16036:16036 Poly <> ::'('_x_','_x_')' not
R16038:16038 Poly <> ::'('_x_','_x_')' not
R16044:16044 Poly <> ::'('_x_','_x_')' not
R16039:16043 Basics <> false constr
def 16066:16075 <> test_split
R16107:16109 Coq.Init.Logic <> :type_scope:x_'='_x not
R16080:16084 Poly <> split def
R16086:16086 Poly <> ::'['_x_','_'..'_','_x_']' not
R16096:16096 Poly <> ::'['_x_','_'..'_','_x_']' not
R16106:16106 Poly <> ::'['_x_','_'..'_','_x_']' not
R16097:16097 Poly <> ::'('_x_','_x_')' not
R16099:16099 Poly <> ::'('_x_','_x_')' not
R16105:16105 Poly <> ::'('_x_','_x_')' not
R16100:16104 Basics <> false constr
R16087:16087 Poly <> ::'('_x_','_x_')' not
R16089:16089 Poly <> ::'('_x_','_x_')' not
R16095:16095 Poly <> ::'('_x_','_x_')' not
R16090:16094 Basics <> false constr
R16110:16110 Poly <> ::'('_x_','_x_')' not
R16116:16116 Poly <> ::'('_x_','_x_')' not
R16130:16130 Poly <> ::'('_x_','_x_')' not
R16111:16111 Poly <> ::'['_x_','_'..'_','_x_']' not
R16113:16113 Poly <> ::'['_x_','_'..'_','_x_']' not
R16115:16115 Poly <> ::'['_x_','_'..'_','_x_']' not
R16117:16117 Poly <> ::'['_x_','_'..'_','_x_']' not
R16123:16123 Poly <> ::'['_x_','_'..'_','_x_']' not
R16129:16129 Poly <> ::'['_x_','_'..'_','_x_']' not
R16124:16128 Basics <> false constr
R16118:16122 Basics <> false constr
ind 16650:16655 <> option
constr 16680:16683 <> Some
constr 16705:16708 <> None
R16692:16697 Poly <> option ind
R16712:16717 Poly <> option ind
R16742:16745 Poly <> Some constr
R16773:16776 Poly <> None constr
def 16888:16892 <> index
R16910:16912 Coq.Init.Datatypes <> nat ind
R16935:16938 Poly <> list ind
R16940:16940 Poly <> X var
R16945:16950 Poly <> option ind
R16952:16952 Poly <> X var
R16965:16965 Poly <> l var
R16976:16977 Poly <> ::'['_']' not
R16982:16985 Poly <> None constr
R16993:16996 Poly <> ::x_'::'_x not
R17006:17012 Basics <> beq_nat def
R17016:17016 Coq.Init.Datatypes <> O constr
R17014:17014 Poly <> n var
R17035:17039 Poly <> index def
R17042:17045 Coq.Init.Peano <> pred def
R17047:17047 Poly <> n var
R17023:17026 Poly <> Some constr
def 17069:17079 <> test_index1
R17103:17106 Coq.Init.Logic <> :type_scope:x_'='_x not
R17086:17090 Poly <> index def
R17094:17094 Poly <> ::'['_x_','_'..'_','_x_']' not
R17096:17096 Poly <> ::'['_x_','_'..'_','_x_']' not
R17098:17098 Poly <> ::'['_x_','_'..'_','_x_']' not
R17100:17100 Poly <> ::'['_x_','_'..'_','_x_']' not
R17102:17102 Poly <> ::'['_x_','_'..'_','_x_']' not
R17107:17110 Poly <> Some constr
def 17149:17159 <> test_index2
R17184:17187 Coq.Init.Logic <> :type_scope:x_'='_x not
R17166:17170 Poly <> index def
R17175:17175 Poly <> ::'['_x_','_'..'_','_x_']' not
R17179:17179 Poly <> ::'['_x_','_'..'_','_x_']' not
R17183:17183 Poly <> ::'['_x_','_'..'_','_x_']' not
R17180:17180 Poly <> ::'['_x_','_'..'_','_x_']' not
R17182:17182 Poly <> ::'['_x_','_'..'_','_x_']' not
R17176:17176 Poly <> ::'['_x_','_'..'_','_x_']' not
R17178:17178 Poly <> ::'['_x_','_'..'_','_x_']' not
R17188:17191 Poly <> Some constr
R17193:17193 Poly <> ::'['_x_','_'..'_','_x_']' not
R17195:17195 Poly <> ::'['_x_','_'..'_','_x_']' not
def 17232:17242 <> test_index3
R17264:17267 Coq.Init.Logic <> :type_scope:x_'='_x not
R17249:17253 Poly <> index def
R17258:17258 Poly <> ::'['_x_','_'..'_','_x_']' not
R17263:17263 Poly <> ::'['_x_','_'..'_','_x_']' not
R17259:17262 Basics <> true constr
R17268:17271 Poly <> None constr
def 17523:17528 <> hd_opt
R17546:17549 Poly <> list ind
R17551:17551 Poly <> X var
R17557:17562 Poly <> option ind
R17564:17564 Poly <> X var
R17577:17577 Poly <> l var
R17590:17591 Poly <> ::'['_']' not
R17596:17599 Poly <> None constr
R17608:17611 Poly <> ::x_'::'_x not
R17617:17620 Poly <> Some constr
R17760:17765 Poly <> hd_opt def
def 17777:17788 <> test_hd_opt1
R17805:17807 Coq.Init.Logic <> :type_scope:x_'='_x not
R17793:17798 Poly <> hd_opt def
R17800:17800 Poly <> ::'['_x_','_'..'_','_x_']' not
R17802:17802 Poly <> ::'['_x_','_'..'_','_x_']' not
R17804:17804 Poly <> ::'['_x_','_'..'_','_x_']' not
R17808:17811 Poly <> Some constr
def 17857:17868 <> test_hd_opt2
R17891:17894 Coq.Init.Logic <> :type_scope:x_'='_x not
R17874:17879 Poly <> hd_opt def
R17882:17882 Poly <> ::'['_x_','_'..'_','_x_']' not
R17886:17886 Poly <> ::'['_x_','_'..'_','_x_']' not
R17890:17890 Poly <> ::'['_x_','_'..'_','_x_']' not
R17887:17887 Poly <> ::'['_x_','_'..'_','_x_']' not
R17889:17889 Poly <> ::'['_x_','_'..'_','_x_']' not
R17883:17883 Poly <> ::'['_x_','_'..'_','_x_']' not
R17885:17885 Poly <> ::'['_x_','_'..'_','_x_']' not
R17895:17898 Poly <> Some constr
R17900:17900 Poly <> ::'['_x_','_'..'_','_x_']' not
R17902:17902 Poly <> ::'['_x_','_'..'_','_x_']' not
def 18563:18572 <> doit3times
R18589:18589 Poly <> X var
R18586:18586 Poly <> X var
R18595:18595 Poly <> X var
R18600:18600 Poly <> X var
R18608:18608 Poly <> f var
R18611:18611 Poly <> f var
R18614:18614 Poly <> f var
R18616:18616 Poly <> n var
R18775:18784 Poly <> doit3times def
def 18856:18870 <> test_doit3times
R18894:18896 Coq.Init.Logic <> :type_scope:x_'='_x not
R18873:18882 Poly <> doit3times def
R18884:18891 Basics <> minustwo def
def 18935:18950 <> test_doit3times'
R18973:18975 Coq.Init.Logic <> :type_scope:x_'='_x not
R18953:18962 Poly <> doit3times def
R18969:18972 Basics <> true constr
R18964:18967 Basics <> negb def
R18976:18980 Basics <> false constr
R19274:19277 Coq.Init.Peano <> plus def
def 19999:20003 <> plus3
R20008:20011 Coq.Init.Peano <> plus def
R20022:20026 Poly <> plus3 def
def 20038:20047 <> test_plus3
R20061:20063 Coq.Init.Logic <> :type_scope:x_'='_x not
R20054:20058 Poly <> plus3 def
def 20101:20111 <> test_plus3'
R20135:20137 Coq.Init.Logic <> :type_scope:x_'='_x not
R20117:20126 Poly <> doit3times def
R20128:20132 Poly <> plus3 def
def 20175:20186 <> test_plus3''
R20212:20214 Coq.Init.Logic <> :type_scope:x_'='_x not
R20191:20200 Poly <> doit3times def
R20203:20206 Coq.Init.Peano <> plus def
def 21138:21147 <> prod_curry
R21180:21180 Poly <> Z var
R21172:21174 Poly <> :type_scope:x_'*'_x not
R21171:21171 Poly <> X var
R21175:21175 Poly <> Y var
R21188:21188 Poly <> X var
R21196:21196 Poly <> Y var
R21201:21201 Poly <> Z var
R21206:21206 Poly <> f var
R21208:21208 Poly <> ::'('_x_','_x_')' not
R21210:21211 Poly <> ::'('_x_','_x_')' not
R21213:21213 Poly <> ::'('_x_','_x_')' not
R21209:21209 Poly <> x var
R21212:21212 Poly <> y var
def 21358:21369 <> prod_uncurry
R21403:21403 Poly <> Z var
R21398:21398 Poly <> Y var
R21393:21393 Poly <> X var
R21412:21414 Poly <> :type_scope:x_'*'_x not
R21411:21411 Poly <> X var
R21415:21415 Poly <> Y var
R21420:21420 Poly <> Z var
R21446:21450 Basics <> admit prfax
R21588:21597 Poly <> prod_curry def
R21607:21618 Poly <> prod_uncurry def
prf 21630:21642 <> uncurry_curry
R21683:21683 Poly <> Z var
R21678:21678 Poly <> Y var
R21673:21673 Poly <> X var
R21724:21726 Coq.Init.Logic <> :type_scope:x_'='_x not
R21693:21702 Poly <> prod_curry def
R21723:21723 Poly <> y var
R21721:21721 Poly <> x var
R21705:21716 Poly <> prod_uncurry def
R21718:21718 Poly <> f var
R21727:21727 Poly <> f var
R21731:21731 Poly <> y var
R21729:21729 Poly <> x var
prf 21781:21793 <> curry_uncurry
R21867:21867 Poly <> Z var
R21858:21860 Poly <> :type_scope:x_'*'_x not
R21857:21857 Poly <> X var
R21861:21861 Poly <> Y var
R21876:21878 Poly <> :type_scope:x_'*'_x not
R21875:21875 Poly <> X var
R21879:21879 Poly <> Y var
R21914:21916 Coq.Init.Logic <> :type_scope:x_'='_x not
R21885:21896 Poly <> prod_uncurry def
R21913:21913 Poly <> p var
R21899:21908 Poly <> prod_curry def
R21910:21910 Poly <> f var
R21917:21917 Poly <> f var
R21919:21919 Poly <> p var
def 22319:22324 <> filter
R22345:22348 Basics <> bool ind
R22342:22342 Poly <> X var
R22354:22357 Poly <> list ind
R22359:22359 Poly <> X var
R22382:22385 Poly <> list ind
R22387:22387 Poly <> X var
R22401:22401 Poly <> l var
R22412:22413 Poly <> ::'['_']' not
R22422:22423 Poly <> ::'['_']' not
R22430:22433 Poly <> ::x_'::'_x not
R22442:22445 Poly <> test var
R22510:22515 Poly <> filter def
R22517:22520 Poly <> test var
R22455:22459 Poly <> ::x_'::'_x not
R22473:22473 Poly <> ::x_'::'_x not
R22460:22465 Poly <> filter def
R22467:22470 Poly <> test var
def 22701:22712 <> test_filter1
R22737:22739 Coq.Init.Logic <> :type_scope:x_'='_x not
R22715:22720 Poly <> filter def
R22728:22728 Poly <> ::'['_x_','_'..'_','_x_']' not
R22730:22730 Poly <> ::'['_x_','_'..'_','_x_']' not
R22732:22732 Poly <> ::'['_x_','_'..'_','_x_']' not
R22734:22734 Poly <> ::'['_x_','_'..'_','_x_']' not
R22736:22736 Poly <> ::'['_x_','_'..'_','_x_']' not
R22722:22726 Basics <> evenb def
R22740:22740 Poly <> ::'['_x_','_'..'_','_x_']' not
R22742:22742 Poly <> ::'['_x_','_'..'_','_x_']' not
R22744:22744 Poly <> ::'['_x_','_'..'_','_x_']' not
def 22785:22795 <> length_is_1
R22813:22816 Poly <> list ind
R22818:22818 Poly <> X var
R22823:22826 Basics <> bool ind
R22833:22839 Basics <> beq_nat def
R22842:22847 Poly <> length def
R22849:22849 Poly <> l var
def 22864:22875 <> test_filter2
R22951:22955 Coq.Init.Logic <> :type_scope:x_'='_x not
R22883:22888 Poly <> filter def
R22913:22914 Poly <> ::'['_x_','_'..'_','_x_']' not
R22921:22922 Poly <> ::'['_x_','_'..'_','_x_']' not
R22926:22927 Poly <> ::'['_x_','_'..'_','_x_']' not
R22931:22932 Poly <> ::'['_x_','_'..'_','_x_']' not
R22940:22941 Poly <> ::'['_x_','_'..'_','_x_']' not
R22944:22945 Poly <> ::'['_x_','_'..'_','_x_']' not
R22949:22950 Poly <> ::'['_x_','_'..'_','_x_']' not
R22946:22946 Poly <> ::'['_x_','_'..'_','_x_']' not
R22948:22948 Poly <> ::'['_x_','_'..'_','_x_']' not
R22942:22943 Poly <> ::'['_']' not
R22933:22933 Poly <> ::'['_x_','_'..'_','_x_']' not
R22935:22935 Poly <> ::'['_x_','_'..'_','_x_']' not
R22937:22937 Poly <> ::'['_x_','_'..'_','_x_']' not
R22939:22939 Poly <> ::'['_x_','_'..'_','_x_']' not
R22928:22928 Poly <> ::'['_x_','_'..'_','_x_']' not
R22930:22930 Poly <> ::'['_x_','_'..'_','_x_']' not
R22923:22923 Poly <> ::'['_x_','_'..'_','_x_']' not
R22925:22925 Poly <> ::'['_x_','_'..'_','_x_']' not
R22915:22915 Poly <> ::'['_x_','_'..'_','_x_']' not
R22917:22918 Poly <> ::'['_x_','_'..'_','_x_']' not
R22920:22920 Poly <> ::'['_x_','_'..'_','_x_']' not
R22890:22900 Poly <> length_is_1 def
R22956:22957 Poly <> ::'['_x_','_'..'_','_x_']' not
R22961:22962 Poly <> ::'['_x_','_'..'_','_x_']' not
R22966:22967 Poly <> ::'['_x_','_'..'_','_x_']' not
R22971:22972 Poly <> ::'['_x_','_'..'_','_x_']' not
R22968:22968 Poly <> ::'['_x_','_'..'_','_x_']' not
R22970:22970 Poly <> ::'['_x_','_'..'_','_x_']' not
R22963:22963 Poly <> ::'['_x_','_'..'_','_x_']' not
R22965:22965 Poly <> ::'['_x_','_'..'_','_x_']' not
R22958:22958 Poly <> ::'['_x_','_'..'_','_x_']' not
R22960:22960 Poly <> ::'['_x_','_'..'_','_x_']' not
def 23131:23146 <> countoddmembers'
R23151:23154 Poly <> list ind
R23156:23158 Coq.Init.Datatypes <> nat ind
R23163:23165 Coq.Init.Datatypes <> nat ind
R23173:23178 Poly <> length def
R23181:23186 Poly <> filter def
R23193:23193 Poly <> l var
R23188:23191 Basics <> oddb def
def 23206:23227 <> test_countoddmembers'1
R23262:23264 Coq.Init.Logic <> :type_scope:x_'='_x not
R23232:23247 Poly <> countoddmembers' def
R23249:23249 Poly <> ::'['_x_','_'..'_','_x_']' not
R23251:23251 Poly <> ::'['_x_','_'..'_','_x_']' not
R23253:23253 Poly <> ::'['_x_','_'..'_','_x_']' not
R23255:23255 Poly <> ::'['_x_','_'..'_','_x_']' not
R23257:23257 Poly <> ::'['_x_','_'..'_','_x_']' not
R23259:23259 Poly <> ::'['_x_','_'..'_','_x_']' not
R23261:23261 Poly <> ::'['_x_','_'..'_','_x_']' not
def 23309:23330 <> test_countoddmembers'2
R23359:23361 Coq.Init.Logic <> :type_scope:x_'='_x not
R23335:23350 Poly <> countoddmembers' def
R23352:23352 Poly <> ::'['_x_','_'..'_','_x_']' not
R23354:23354 Poly <> ::'['_x_','_'..'_','_x_']' not
R23356:23356 Poly <> ::'['_x_','_'..'_','_x_']' not
R23358:23358 Poly <> ::'['_x_','_'..'_','_x_']' not
def 23406:23427 <> test_countoddmembers'3
R23452:23454 Coq.Init.Logic <> :type_scope:x_'='_x not
R23432:23447 Poly <> countoddmembers' def
R23449:23451 Poly <> nil constr
def 24321:24334 <> test_anon_fun'
R24369:24371 Coq.Init.Logic <> :type_scope:x_'='_x not
R24340:24349 Poly <> doit3times def
R24362:24364 Basics <> :nat_scope:x_'*'_x not
R24361:24361 Poly <> n var
R24365:24365 Poly <> n var
def 24508:24520 <> test_filter2'
R24616:24620 Coq.Init.Logic <> :type_scope:x_'='_x not
R24528:24533 Poly <> filter def
R24578:24579 Poly <> ::'['_x_','_'..'_','_x_']' not
R24586:24587 Poly <> ::'['_x_','_'..'_','_x_']' not
R24591:24592 Poly <> ::'['_x_','_'..'_','_x_']' not
R24596:24597 Poly <> ::'['_x_','_'..'_','_x_']' not
R24605:24606 Poly <> ::'['_x_','_'..'_','_x_']' not
R24609:24610 Poly <> ::'['_x_','_'..'_','_x_']' not
R24614:24615 Poly <> ::'['_x_','_'..'_','_x_']' not
R24611:24611 Poly <> ::'['_x_','_'..'_','_x_']' not
R24613:24613 Poly <> ::'['_x_','_'..'_','_x_']' not
R24607:24608 Poly <> ::'['_']' not
R24598:24598 Poly <> ::'['_x_','_'..'_','_x_']' not
R24600:24600 Poly <> ::'['_x_','_'..'_','_x_']' not
R24602:24602 Poly <> ::'['_x_','_'..'_','_x_']' not
R24604:24604 Poly <> ::'['_x_','_'..'_','_x_']' not
R24593:24593 Poly <> ::'['_x_','_'..'_','_x_']' not
R24595:24595 Poly <> ::'['_x_','_'..'_','_x_']' not
R24588:24588 Poly <> ::'['_x_','_'..'_','_x_']' not
R24590:24590 Poly <> ::'['_x_','_'..'_','_x_']' not
R24580:24580 Poly <> ::'['_x_','_'..'_','_x_']' not
R24582:24583 Poly <> ::'['_x_','_'..'_','_x_']' not
R24585:24585 Poly <> ::'['_x_','_'..'_','_x_']' not
R24545:24551 Basics <> beq_nat def
R24554:24559 Poly <> length def
R24561:24561 Poly <> l var
R24621:24622 Poly <> ::'['_x_','_'..'_','_x_']' not
R24626:24627 Poly <> ::'['_x_','_'..'_','_x_']' not
R24631:24632 Poly <> ::'['_x_','_'..'_','_x_']' not
R24636:24637 Poly <> ::'['_x_','_'..'_','_x_']' not
R24633:24633 Poly <> ::'['_x_','_'..'_','_x_']' not
R24635:24635 Poly <> ::'['_x_','_'..'_','_x_']' not
R24628:24628 Poly <> ::'['_x_','_'..'_','_x_']' not
R24630:24630 Poly <> ::'['_x_','_'..'_','_x_']' not
R24623:24623 Poly <> ::'['_x_','_'..'_','_x_']' not
R24625:24625 Poly <> ::'['_x_','_'..'_','_x_']' not
def 24933:24947 <> filter_even_gt7
R24954:24957 Poly <> list ind
R24959:24961 Coq.Init.Datatypes <> nat ind
R24966:24969 Poly <> list ind
R24971:24973 Coq.Init.Datatypes <> nat ind
R24980:24985 Poly <> filter def
R24994:24999 Poly <> filter def
R25013:25013 Poly <> l var
R25002:25008 Basics <> blt_nat def
R24987:24991 Basics <> evenb def
def 25027:25048 <> test_filter_even_gt7_1
R25089:25091 Coq.Init.Logic <> :type_scope:x_'='_x not
R25054:25068 Poly <> filter_even_gt7 def
R25070:25070 Poly <> ::'['_x_','_'..'_','_x_']' not
R25072:25072 Poly <> ::'['_x_','_'..'_','_x_']' not
R25074:25074 Poly <> ::'['_x_','_'..'_','_x_']' not
R25076:25076 Poly <> ::'['_x_','_'..'_','_x_']' not
R25078:25078 Poly <> ::'['_x_','_'..'_','_x_']' not
R25081:25081 Poly <> ::'['_x_','_'..'_','_x_']' not
R25083:25083 Poly <> ::'['_x_','_'..'_','_x_']' not
R25086:25086 Poly <> ::'['_x_','_'..'_','_x_']' not
R25088:25088 Poly <> ::'['_x_','_'..'_','_x_']' not
R25092:25092 Poly <> ::'['_x_','_'..'_','_x_']' not
R25095:25095 Poly <> ::'['_x_','_'..'_','_x_']' not
R25098:25098 Poly <> ::'['_x_','_'..'_','_x_']' not
R25100:25100 Poly <> ::'['_x_','_'..'_','_x_']' not
def 25145:25166 <> test_filter_even_gt7_2
R25202:25204 Coq.Init.Logic <> :type_scope:x_'='_x not
R25172:25186 Poly <> filter_even_gt7 def
R25188:25188 Poly <> ::'['_x_','_'..'_','_x_']' not
R25190:25190 Poly <> ::'['_x_','_'..'_','_x_']' not
R25192:25192 Poly <> ::'['_x_','_'..'_','_x_']' not
R25194:25194 Poly <> ::'['_x_','_'..'_','_x_']' not
R25197:25197 Poly <> ::'['_x_','_'..'_','_x_']' not
R25201:25201 Poly <> ::'['_x_','_'..'_','_x_']' not
R25205:25206 Poly <> ::'['_']' not
def 25863:25871 <> partition
R25897:25900 Basics <> bool ind
R25892:25892 Poly <> X var
R25908:25911 Poly <> list ind
R25913:25913 Poly <> X var
R25946:25948 Poly <> :type_scope:x_'*'_x not
R25940:25943 Poly <> list ind
R25945:25945 Poly <> X var
R25949:25952 Poly <> list ind
R25954:25954 Poly <> X var
R25959:25960 Poly <> ::'('_x_','_x_')' not
R25974:25976 Poly <> ::'('_x_','_x_')' not
R26008:26008 Poly <> ::'('_x_','_x_')' not
R25961:25966 Poly <> filter def
R25973:25973 Poly <> l var
R25968:25971 Poly <> test var
R25977:25982 Poly <> filter def
R26007:26007 Poly <> l var
R25993:25996 Basics <> negb def
R25998:26001 Poly <> test var
R26003:26003 Poly <> x var
def 26020:26034 <> test_partition1
R26063:26065 Coq.Init.Logic <> :type_scope:x_'='_x not
R26037:26045 Poly <> partition def
R26052:26052 Poly <> ::'['_x_','_'..'_','_x_']' not
R26054:26054 Poly <> ::'['_x_','_'..'_','_x_']' not
R26056:26056 Poly <> ::'['_x_','_'..'_','_x_']' not
R26058:26058 Poly <> ::'['_x_','_'..'_','_x_']' not
R26060:26060 Poly <> ::'['_x_','_'..'_','_x_']' not
R26062:26062 Poly <> ::'['_x_','_'..'_','_x_']' not
R26047:26050 Basics <> oddb def
R26066:26066 Poly <> ::'('_x_','_x_')' not
R26074:26075 Poly <> ::'('_x_','_x_')' not
R26081:26081 Poly <> ::'('_x_','_x_')' not
R26067:26067 Poly <> ::'['_x_','_'..'_','_x_']' not
R26069:26069 Poly <> ::'['_x_','_'..'_','_x_']' not
R26071:26071 Poly <> ::'['_x_','_'..'_','_x_']' not
R26073:26073 Poly <> ::'['_x_','_'..'_','_x_']' not
R26076:26076 Poly <> ::'['_x_','_'..'_','_x_']' not
R26078:26078 Poly <> ::'['_x_','_'..'_','_x_']' not
R26080:26080 Poly <> ::'['_x_','_'..'_','_x_']' not
def 26124:26138 <> test_partition2
R26175:26177 Coq.Init.Logic <> :type_scope:x_'='_x not
R26141:26149 Poly <> partition def
R26168:26168 Poly <> ::'['_x_','_'..'_','_x_']' not
R26170:26170 Poly <> ::'['_x_','_'..'_','_x_']' not
R26172:26172 Poly <> ::'['_x_','_'..'_','_x_']' not
R26174:26174 Poly <> ::'['_x_','_'..'_','_x_']' not
R26161:26165 Basics <> false constr
R26178:26178 Poly <> ::'('_x_','_x_')' not
R26181:26182 Poly <> ::'('_x_','_x_')' not
R26190:26190 Poly <> ::'('_x_','_x_')' not
R26179:26180 Poly <> ::'['_']' not
R26183:26183 Poly <> ::'['_x_','_'..'_','_x_']' not
R26185:26185 Poly <> ::'['_x_','_'..'_','_x_']' not
R26187:26187 Poly <> ::'['_x_','_'..'_','_x_']' not
R26189:26189 Poly <> ::'['_x_','_'..'_','_x_']' not
def 26382:26384 <> map
R26403:26403 Poly <> Y var
R26400:26400 Poly <> X var
R26409:26412 Poly <> list ind
R26414:26414 Poly <> X var
R26434:26437 Poly <> list ind
R26439:26439 Poly <> Y var
R26454:26454 Poly <> l var
R26465:26466 Poly <> ::'['_']' not
R26475:26476 Poly <> ::'['_']' not
R26483:26486 Poly <> ::x_'::'_x not
R26492:26492 Poly <> ::x_'::'_x not
R26496:26501 Poly <> ::x_'::'_x not
R26509:26509 Poly <> ::x_'::'_x not
R26493:26493 Poly <> f var
R26502:26504 Poly <> map def
R26506:26506 Poly <> f var
def 26726:26734 <> test_map1
R26757:26759 Coq.Init.Logic <> :type_scope:x_'='_x not
R26737:26739 Poly <> map def
R26750:26750 Poly <> ::'['_x_','_'..'_','_x_']' not
R26752:26752 Poly <> ::'['_x_','_'..'_','_x_']' not
R26754:26754 Poly <> ::'['_x_','_'..'_','_x_']' not
R26756:26756 Poly <> ::'['_x_','_'..'_','_x_']' not
R26742:26745 Coq.Init.Peano <> plus def
R26760:26760 Poly <> ::'['_x_','_'..'_','_x_']' not
R26762:26762 Poly <> ::'['_x_','_'..'_','_x_']' not
R26764:26764 Poly <> ::'['_x_','_'..'_','_x_']' not
R26766:26766 Poly <> ::'['_x_','_'..'_','_x_']' not
def 27075:27083 <> test_map2
R27104:27106 Coq.Init.Logic <> :type_scope:x_'='_x not
R27086:27088 Poly <> map def
R27095:27095 Poly <> ::'['_x_','_'..'_','_x_']' not
R27097:27097 Poly <> ::'['_x_','_'..'_','_x_']' not
R27099:27099 Poly <> ::'['_x_','_'..'_','_x_']' not
R27101:27101 Poly <> ::'['_x_','_'..'_','_x_']' not
R27103:27103 Poly <> ::'['_x_','_'..'_','_x_']' not
R27090:27093 Basics <> oddb def
R27107:27107 Poly <> ::'['_x_','_'..'_','_x_']' not
R27113:27113 Poly <> ::'['_x_','_'..'_','_x_']' not
R27118:27118 Poly <> ::'['_x_','_'..'_','_x_']' not
R27124:27124 Poly <> ::'['_x_','_'..'_','_x_']' not
R27129:27129 Poly <> ::'['_x_','_'..'_','_x_']' not
R27125:27128 Basics <> true constr
R27119:27123 Basics <> false constr
R27114:27117 Basics <> true constr
R27108:27112 Basics <> false constr
def 27316:27324 <> test_map3
R27373:27378 Coq.Init.Logic <> :type_scope:x_'='_x not
R27332:27334 Poly <> map def
R27364:27364 Poly <> ::'['_x_','_'..'_','_x_']' not
R27366:27366 Poly <> ::'['_x_','_'..'_','_x_']' not
R27368:27368 Poly <> ::'['_x_','_'..'_','_x_']' not
R27370:27370 Poly <> ::'['_x_','_'..'_','_x_']' not
R27372:27372 Poly <> ::'['_x_','_'..'_','_x_']' not
R27346:27346 Poly <> ::'['_x_','_'..'_','_x_']' not
R27354:27354 Poly <> ::'['_x_','_'..'_','_x_']' not
R27361:27361 Poly <> ::'['_x_','_'..'_','_x_']' not
R27355:27358 Basics <> oddb def
R27360:27360 Poly <> n var
R27347:27351 Basics <> evenb def
R27353:27353 Poly <> n var
R27379:27379 Poly <> ::'['_x_','_'..'_','_x_']' not
R27392:27392 Poly <> ::'['_x_','_'..'_','_x_']' not
R27405:27405 Poly <> ::'['_x_','_'..'_','_x_']' not
R27418:27418 Poly <> ::'['_x_','_'..'_','_x_']' not
R27431:27431 Poly <> ::'['_x_','_'..'_','_x_']' not
R27419:27419 Poly <> ::'['_x_','_'..'_','_x_']' not
R27425:27425 Poly <> ::'['_x_','_'..'_','_x_']' not
R27430:27430 Poly <> ::'['_x_','_'..'_','_x_']' not
R27426:27429 Basics <> true constr
R27420:27424 Basics <> false constr
R27406:27406 Poly <> ::'['_x_','_'..'_','_x_']' not
R27411:27411 Poly <> ::'['_x_','_'..'_','_x_']' not
R27417:27417 Poly <> ::'['_x_','_'..'_','_x_']' not
R27412:27416 Basics <> false constr
R27407:27410 Basics <> true constr
R27393:27393 Poly <> ::'['_x_','_'..'_','_x_']' not
R27399:27399 Poly <> ::'['_x_','_'..'_','_x_']' not
R27404:27404 Poly <> ::'['_x_','_'..'_','_x_']' not
R27400:27403 Basics <> true constr
R27394:27398 Basics <> false constr
R27380:27380 Poly <> ::'['_x_','_'..'_','_x_']' not
R27385:27385 Poly <> ::'['_x_','_'..'_','_x_']' not
R27391:27391 Poly <> ::'['_x_','_'..'_','_x_']' not
R27386:27390 Basics <> false constr
R27381:27384 Basics <> true constr
prf 27611:27617 <> mytool1
R27649:27649 Poly <> Y var
R27644:27644 Poly <> X var
R27657:27660 Poly <> list ind
R27662:27662 Poly <> X var
R27670:27670 Poly <> X var
R27712:27714 Coq.Init.Logic <> :type_scope:x_'='_x not
R27693:27696 Poly <> snoc def
R27708:27708 Poly <> f var
R27710:27710 Poly <> x var
R27698:27700 Poly <> map def
R27704:27704 Poly <> l var
R27702:27702 Poly <> f var
R27715:27717 Poly <> map def
R27722:27725 Poly <> snoc def
R27729:27729 Poly <> x var
R27727:27727 Poly <> l var
R27719:27719 Poly <> f var
prf 27844:27850 <> map_rev
R27884:27884 Poly <> Y var
R27879:27879 Poly <> X var
R27892:27895 Poly <> list ind
R27897:27897 Poly <> X var
R27916:27918 Coq.Init.Logic <> :type_scope:x_'='_x not
R27903:27905 Poly <> map def
R27910:27912 Poly <> rev def
R27914:27914 Poly <> l var
R27907:27907 Poly <> f var
R27919:27921 Poly <> rev def
R27924:27926 Poly <> map def
R27930:27930 Poly <> l var
R27928:27928 Poly <> f var
R28039:28045 Poly <> mytool1 thm
R28039:28045 Poly <> mytool1 thm
def 28525:28532 <> flat_map
R28553:28556 Poly <> list ind
R28558:28558 Poly <> Y var
R28548:28548 Poly <> X var
R28564:28567 Poly <> list ind
R28569:28569 Poly <> X var
R28595:28598 Poly <> list ind
R28600:28600 Poly <> Y var
R28615:28615 Poly <> l var
R28628:28629 Poly <> ::'['_']' not
R28634:28635 Poly <> ::'['_']' not
R28644:28647 Poly <> ::x_'::'_x not
R28654:28656 Poly <> app def
R28665:28672 Poly <> flat_map def
R28674:28674 Poly <> f var
R28659:28659 Poly <> f var
def 28696:28709 <> test_flat_map1
R28750:28754 Coq.Init.Logic <> :type_scope:x_'='_x not
R28715:28722 Poly <> flat_map def
R28743:28743 Poly <> ::'['_x_','_'..'_','_x_']' not
R28745:28745 Poly <> ::'['_x_','_'..'_','_x_']' not
R28747:28747 Poly <> ::'['_x_','_'..'_','_x_']' not
R28749:28749 Poly <> ::'['_x_','_'..'_','_x_']' not
R28734:28734 Poly <> ::'['_x_','_'..'_','_x_']' not
R28736:28736 Poly <> ::'['_x_','_'..'_','_x_']' not
R28738:28738 Poly <> ::'['_x_','_'..'_','_x_']' not
R28740:28740 Poly <> ::'['_x_','_'..'_','_x_']' not
R28739:28739 Poly <> n var
R28737:28737 Poly <> n var
R28735:28735 Poly <> n var
R28755:28755 Poly <> ::'['_x_','_'..'_','_x_']' not
R28757:28758 Poly <> ::'['_x_','_'..'_','_x_']' not
R28760:28761 Poly <> ::'['_x_','_'..'_','_x_']' not
R28763:28764 Poly <> ::'['_x_','_'..'_','_x_']' not
R28766:28767 Poly <> ::'['_x_','_'..'_','_x_']' not
R28769:28770 Poly <> ::'['_x_','_'..'_','_x_']' not
R28772:28773 Poly <> ::'['_x_','_'..'_','_x_']' not
R28775:28776 Poly <> ::'['_x_','_'..'_','_x_']' not
R28778:28779 Poly <> ::'['_x_','_'..'_','_x_']' not
R28781:28781 Poly <> ::'['_x_','_'..'_','_x_']' not
def 28988:28997 <> option_map
R29022:29022 Poly <> Y var
R29017:29017 Poly <> X var
R29031:29036 Poly <> option ind
R29038:29038 Poly <> X var
R29066:29071 Poly <> option ind
R29073:29073 Poly <> Y var
R29086:29087 Poly <> xo var
R29100:29103 Poly <> None constr
R29108:29111 Poly <> None constr
R29119:29122 Poly <> Some constr
R29129:29132 Poly <> Some constr
R29135:29135 Poly <> f var
def 29954:29957 <> fold
R29980:29980 Poly <> Y var
R29977:29977 Poly <> Y var
R29974:29974 Poly <> X var
R29986:29989 Poly <> list ind
R29991:29991 Poly <> X var
R29997:29997 Poly <> Y var
R30002:30002 Poly <> Y var
R30015:30015 Poly <> l var
R30026:30028 Poly <> nil constr
R30033:30033 Poly <> b var
R30040:30043 Poly <> ::x_'::'_x not
R30049:30049 Poly <> f var
R30054:30057 Poly <> fold def
R30063:30063 Poly <> b var
R30059:30059 Poly <> f var
R30535:30538 Poly <> fold def
R30540:30543 Coq.Init.Peano <> plus def
R30562:30565 Poly <> fold def
R30572:30572 Poly <> ::'['_x_','_'..'_','_x_']' not
R30574:30574 Poly <> ::'['_x_','_'..'_','_x_']' not
R30576:30576 Poly <> ::'['_x_','_'..'_','_x_']' not
R30578:30578 Poly <> ::'['_x_','_'..'_','_x_']' not
R30580:30580 Poly <> ::'['_x_','_'..'_','_x_']' not
R30567:30570 Coq.Init.Peano <> plus def
def 30595:30607 <> fold_example1
R30632:30634 Coq.Init.Logic <> :type_scope:x_'='_x not
R30611:30614 Poly <> fold def
R30621:30621 Poly <> ::'['_x_','_'..'_','_x_']' not
R30623:30623 Poly <> ::'['_x_','_'..'_','_x_']' not
R30625:30625 Poly <> ::'['_x_','_'..'_','_x_']' not
R30627:30627 Poly <> ::'['_x_','_'..'_','_x_']' not
R30629:30629 Poly <> ::'['_x_','_'..'_','_x_']' not
R30616:30619 Coq.Init.Peano <> mult def
def 30673:30685 <> fold_example2
R30726:30728 Coq.Init.Logic <> :type_scope:x_'='_x not
R30689:30692 Poly <> fold def
R30722:30725 Basics <> true constr
R30699:30699 Poly <> ::'['_x_','_'..'_','_x_']' not
R30704:30704 Poly <> ::'['_x_','_'..'_','_x_']' not
R30709:30709 Poly <> ::'['_x_','_'..'_','_x_']' not
R30715:30715 Poly <> ::'['_x_','_'..'_','_x_']' not
R30720:30720 Poly <> ::'['_x_','_'..'_','_x_']' not
R30716:30719 Basics <> true constr
R30710:30714 Basics <> false constr
R30705:30708 Basics <> true constr
R30700:30703 Basics <> true constr
R30694:30697 Basics <> andb def
R30729:30733 Basics <> false constr
def 30770:30782 <> fold_example3
R30817:30819 Coq.Init.Logic <> :type_scope:x_'='_x not
R30786:30789 Poly <> fold def
R30815:30816 Poly <> ::'['_']' not
R30796:30796 Poly <> ::'['_x_','_'..'_','_x_']' not
R30800:30800 Poly <> ::'['_x_','_'..'_','_x_']' not
R30803:30803 Poly <> ::'['_x_','_'..'_','_x_']' not
R30809:30809 Poly <> ::'['_x_','_'..'_','_x_']' not
R30813:30813 Poly <> ::'['_x_','_'..'_','_x_']' not
R30810:30810 Poly <> ::'['_x_','_'..'_','_x_']' not
R30812:30812 Poly <> ::'['_x_','_'..'_','_x_']' not
R30804:30804 Poly <> ::'['_x_','_'..'_','_x_']' not
R30806:30806 Poly <> ::'['_x_','_'..'_','_x_']' not
R30808:30808 Poly <> ::'['_x_','_'..'_','_x_']' not
R30801:30802 Poly <> ::'['_']' not
R30797:30797 Poly <> ::'['_x_','_'..'_','_x_']' not
R30799:30799 Poly <> ::'['_x_','_'..'_','_x_']' not
R30791:30793 Poly <> app def
R30820:30820 Poly <> ::'['_x_','_'..'_','_x_']' not
R30822:30822 Poly <> ::'['_x_','_'..'_','_x_']' not
R30824:30824 Poly <> ::'['_x_','_'..'_','_x_']' not
R30826:30826 Poly <> ::'['_x_','_'..'_','_x_']' not
R30828:30828 Poly <> ::'['_x_','_'..'_','_x_']' not
def 31743:31750 <> constfun
R31766:31766 Poly <> X var
R31776:31776 Poly <> X var
R31771:31773 Coq.Init.Datatypes <> nat ind
R31791:31793 Coq.Init.Datatypes <> nat ind
R31799:31799 Poly <> x var
def 31814:31818 <> ftrue
R31823:31830 Poly <> constfun def
R31832:31835 Basics <> true constr
def 31847:31863 <> constfun_example1
R31874:31876 Coq.Init.Logic <> :type_scope:x_'='_x not
R31867:31871 Poly <> ftrue def
R31877:31880 Basics <> true constr
def 31917:31933 <> constfun_example2
R31952:31954 Coq.Init.Logic <> :type_scope:x_'='_x not
R31938:31945 Poly <> constfun def
def 32287:32294 <> override
R32315:32315 Poly <> X var
R32310:32312 Coq.Init.Datatypes <> nat ind
R32321:32323 Coq.Init.Datatypes <> nat ind
R32329:32329 Poly <> X var
R32339:32339 Poly <> X var
R32334:32336 Coq.Init.Datatypes <> nat ind
R32353:32355 Coq.Init.Datatypes <> nat ind
R32364:32370 Basics <> beq_nat def
R32374:32375 Poly <> k' var
R32372:32372 Poly <> k var
R32389:32389 Poly <> f var
R32391:32392 Poly <> k' var
R32382:32382 Poly <> x var
R32585:32589 Poly <> ftrue def
def 32603:32613 <> fmostlytrue
R32618:32625 Poly <> override def
R32654:32658 Basics <> false constr
R32628:32635 Poly <> override def
R32645:32649 Basics <> false constr
R32637:32641 Poly <> ftrue def
def 32670:32686 <> override_example1
R32703:32705 Coq.Init.Logic <> :type_scope:x_'='_x not
R32690:32700 Poly <> fmostlytrue def
R32706:32709 Basics <> true constr
def 32746:32762 <> override_example2
R32779:32781 Coq.Init.Logic <> :type_scope:x_'='_x not
R32766:32776 Poly <> fmostlytrue def
R32782:32786 Basics <> false constr
def 32823:32839 <> override_example3
R32856:32858 Coq.Init.Logic <> :type_scope:x_'='_x not
R32843:32853 Poly <> fmostlytrue def
R32859:32862 Basics <> true constr
def 32899:32915 <> override_example4
R32932:32934 Coq.Init.Logic <> :type_scope:x_'='_x not
R32919:32929 Poly <> fmostlytrue def
R32935:32939 Basics <> false constr
prf 33227:33242 <> override_example
R33256:33259 Basics <> bool ind
R33298:33300 Coq.Init.Logic <> :type_scope:x_'='_x not
R33267:33274 Poly <> override def
R33291:33294 Basics <> true constr
R33277:33284 Poly <> constfun def
R33286:33286 Poly <> b var
R33301:33301 Poly <> b var
ind 34305:34313 <> boolllist
constr 34334:34341 <> boollnil
constr 34360:34368 <> boollcons
R34317:34319 Coq.Init.Datatypes <> nat ind
R34346:34354 Poly <> boolllist ind
R34356:34356 Coq.Init.Datatypes <> O constr
R34405:34413 Poly <> boolllist ind
R34416:34416 Coq.Init.Datatypes <> S constr
R34418:34418 Poly <> n var
R34390:34398 Poly <> boolllist ind
R34400:34400 Poly <> n var
R34382:34385 Basics <> bool ind
R34442:34450 Poly <> boollcons constr
R34467:34475 Poly <> boollcons constr
R34483:34491 Poly <> boollcons constr
R34500:34508 Poly <> boollcons constr
R34515:34522 Poly <> boollnil constr
R34510:34513 Basics <> true constr
R34493:34497 Basics <> false constr
R34477:34480 Basics <> true constr
def 34538:34542 <> blapp
R34554:34562 Poly <> boolllist ind
R34564:34565 Poly <> n1 var
R34594:34602 Poly <> boolllist ind
R34604:34605 Poly <> n2 var
R34624:34632 Poly <> boolllist ind
R34637:34639 Basics <> :nat_scope:x_'+'_x not
R34635:34636 Poly <> n1 var
R34640:34641 Poly <> n2 var
R34656:34657 Poly <> l1 var
R34668:34675 Poly <> boollnil constr
R34687:34688 Poly <> l2 var
R34694:34702 Poly <> boollcons constr
R34713:34721 Poly <> boollcons constr
R34726:34730 Poly <> blapp def
R34734:34735 Poly <> l2 var
ind 34864:34868 <> llist
constr 34898:34901 <> lnil
constr 34918:34922 <> lcons
R34881:34883 Coq.Init.Datatypes <> nat ind
R34906:34910 Poly <> llist ind
R34914:34914 Coq.Init.Datatypes <> O constr
R34954:34958 Poly <> llist ind
R34963:34963 Coq.Init.Datatypes <> S constr
R34965:34965 Poly <> n var
R34941:34945 Poly <> llist ind
R34949:34949 Poly <> n var
R34989:34992 Poly <> lnil constr
R35020:35024 Poly <> lcons constr
R35045:35049 Poly <> lcons constr
R35057:35061 Poly <> lcons constr
R35070:35074 Poly <> lcons constr
R35081:35084 Poly <> lnil constr
R35076:35079 Basics <> true constr
R35063:35067 Basics <> false constr
R35051:35054 Basics <> true constr
def 35100:35103 <> lapp
R35138:35142 Poly <> llist ind
R35146:35147 Poly <> n1 var
R35144:35144 Poly <> X var
R35175:35179 Poly <> llist ind
R35183:35184 Poly <> n2 var
R35181:35181 Poly <> X var
R35202:35206 Poly <> llist ind
R35213:35215 Basics <> :nat_scope:x_'+'_x not
R35211:35212 Poly <> n1 var
R35216:35217 Poly <> n2 var
R35208:35208 Poly <> X var
R35232:35233 Poly <> l1 var
R35244:35247 Poly <> lnil constr
R35259:35260 Poly <> l2 var
R35266:35270 Poly <> lcons constr
R35281:35285 Poly <> lcons constr
R35290:35293 Poly <> lapp def
R35299:35300 Poly <> l2 var
R35295:35295 Poly <> X var
prf 35663:35668 <> silly1
R35690:35692 Coq.Init.Datatypes <> nat ind
R35743:35745 Coq.Init.Logic <> :type_scope:x_'='_x not
R35738:35738 Poly <> ::'['_x_','_'..'_','_x_']' not
R35740:35740 Poly <> ::'['_x_','_'..'_','_x_']' not
R35742:35742 Poly <> ::'['_x_','_'..'_','_x_']' not
R35741:35741 Poly <> o var
R35739:35739 Poly <> n var
R35746:35746 Poly <> ::'['_x_','_'..'_','_x_']' not
R35748:35748 Poly <> ::'['_x_','_'..'_','_x_']' not
R35750:35750 Poly <> ::'['_x_','_'..'_','_x_']' not
R35749:35749 Poly <> p var
R35747:35747 Poly <> m var
R35721:35723 Coq.Init.Logic <> :type_scope:x_'='_x not
R35716:35716 Poly <> ::'['_x_','_'..'_','_x_']' not
R35718:35718 Poly <> ::'['_x_','_'..'_','_x_']' not
R35720:35720 Poly <> ::'['_x_','_'..'_','_x_']' not
R35719:35719 Poly <> o var
R35717:35717 Poly <> n var
R35724:35724 Poly <> ::'['_x_','_'..'_','_x_']' not
R35726:35726 Poly <> ::'['_x_','_'..'_','_x_']' not
R35728:35728 Poly <> ::'['_x_','_'..'_','_x_']' not
R35727:35727 Poly <> p var
R35725:35725 Poly <> n var
R35702:35704 Coq.Init.Logic <> :type_scope:x_'='_x not
R35701:35701 Poly <> n var
R35705:35705 Poly <> m var
prf 36286:36291 <> silly2
R36313:36315 Coq.Init.Datatypes <> nat ind
R36397:36399 Coq.Init.Logic <> :type_scope:x_'='_x not
R36392:36392 Poly <> ::'['_x_','_'..'_','_x_']' not
R36394:36394 Poly <> ::'['_x_','_'..'_','_x_']' not
R36396:36396 Poly <> ::'['_x_','_'..'_','_x_']' not
R36395:36395 Poly <> o var
R36393:36393 Poly <> n var
R36400:36400 Poly <> ::'['_x_','_'..'_','_x_']' not
R36402:36402 Poly <> ::'['_x_','_'..'_','_x_']' not
R36404:36404 Poly <> ::'['_x_','_'..'_','_x_']' not
R36403:36403 Poly <> p var
R36401:36401 Poly <> m var
R36354:36356 Coq.Init.Datatypes <> nat ind
R36374:36376 Coq.Init.Logic <> :type_scope:x_'='_x not
R36369:36369 Poly <> ::'['_x_','_'..'_','_x_']' not
R36371:36371 Poly <> ::'['_x_','_'..'_','_x_']' not
R36373:36373 Poly <> ::'['_x_','_'..'_','_x_']' not
R36372:36372 Poly <> o var
R36370:36370 Poly <> q var
R36377:36377 Poly <> ::'['_x_','_'..'_','_x_']' not
R36379:36379 Poly <> ::'['_x_','_'..'_','_x_']' not
R36381:36381 Poly <> ::'['_x_','_'..'_','_x_']' not
R36380:36380 Poly <> p var
R36378:36378 Poly <> r var
R36361:36363 Coq.Init.Logic <> :type_scope:x_'='_x not
R36360:36360 Poly <> q var
R36364:36364 Poly <> r var
R36325:36327 Coq.Init.Logic <> :type_scope:x_'='_x not
R36324:36324 Poly <> n var
R36328:36328 Poly <> m var
prf 37069:37075 <> silly2a
R37093:37095 Coq.Init.Datatypes <> nat ind
R37187:37189 Coq.Init.Logic <> :type_scope:x_'='_x not
R37184:37184 Poly <> ::'['_x_','_'..'_','_x_']' not
R37186:37186 Poly <> ::'['_x_','_'..'_','_x_']' not
R37185:37185 Poly <> n var
R37190:37190 Poly <> ::'['_x_','_'..'_','_x_']' not
R37192:37192 Poly <> ::'['_x_','_'..'_','_x_']' not
R37191:37191 Poly <> m var
R37142:37144 Coq.Init.Datatypes <> nat ind
R37168:37170 Coq.Init.Logic <> :type_scope:x_'='_x not
R37165:37165 Poly <> ::'['_x_','_'..'_','_x_']' not
R37167:37167 Poly <> ::'['_x_','_'..'_','_x_']' not
R37166:37166 Poly <> q var
R37171:37171 Poly <> ::'['_x_','_'..'_','_x_']' not
R37173:37173 Poly <> ::'['_x_','_'..'_','_x_']' not
R37172:37172 Poly <> r var
R37153:37155 Coq.Init.Logic <> :type_scope:x_'='_x not
R37148:37148 Poly <> ::'('_x_','_x_')' not
R37150:37150 Poly <> ::'('_x_','_x_')' not
R37152:37152 Poly <> ::'('_x_','_x_')' not
R37149:37149 Poly <> q var
R37151:37151 Poly <> q var
R37156:37156 Poly <> ::'('_x_','_x_')' not
R37158:37158 Poly <> ::'('_x_','_x_')' not
R37160:37160 Poly <> ::'('_x_','_x_')' not
R37157:37157 Poly <> r var
R37159:37159 Poly <> r var
R37109:37111 Coq.Init.Logic <> :type_scope:x_'='_x not
R37104:37104 Poly <> ::'('_x_','_x_')' not
R37106:37106 Poly <> ::'('_x_','_x_')' not
R37108:37108 Poly <> ::'('_x_','_x_')' not
R37105:37105 Poly <> n var
R37107:37107 Poly <> n var
R37112:37112 Poly <> ::'('_x_','_x_')' not
R37114:37114 Poly <> ::'('_x_','_x_')' not
R37116:37116 Poly <> ::'('_x_','_x_')' not
R37113:37113 Poly <> m var
R37115:37115 Poly <> m var
prf 37374:37381 <> silly_ex
R37476:37478 Coq.Init.Logic <> :type_scope:x_'='_x not
R37470:37473 Basics <> oddb def
R37479:37482 Basics <> true constr
R37454:37456 Coq.Init.Logic <> :type_scope:x_'='_x not
R37447:37451 Basics <> evenb def
R37457:37460 Basics <> true constr
R37430:37432 Coq.Init.Logic <> :type_scope:x_'='_x not
R37420:37423 Basics <> oddb def
R37426:37426 Coq.Init.Datatypes <> S constr
R37428:37428 Poly <> n var
R37433:37436 Basics <> true constr
R37409:37411 Coq.Init.Logic <> :type_scope:x_'='_x not
R37402:37406 Basics <> evenb def
R37408:37408 Poly <> n var
R37412:37415 Basics <> true constr
prf 37751:37765 <> silly3_firsttry
R37781:37783 Coq.Init.Datatypes <> nat ind
R37838:37840 Coq.Init.Logic <> :type_scope:x_'='_x not
R37819:37825 Basics <> beq_nat def
R37828:37828 Coq.Init.Datatypes <> S constr
R37831:37831 Coq.Init.Datatypes <> S constr
R37833:37833 Poly <> n var
R37841:37844 Basics <> true constr
R37803:37805 Coq.Init.Logic <> :type_scope:x_'='_x not
R37792:37798 Basics <> beq_nat def
R37800:37800 Poly <> n var
R37806:37809 Basics <> true constr
prf 38076:38081 <> silly3
R38097:38099 Coq.Init.Datatypes <> nat ind
R38155:38157 Coq.Init.Logic <> :type_scope:x_'='_x not
R38136:38142 Basics <> beq_nat def
R38145:38145 Coq.Init.Datatypes <> S constr
R38148:38148 Coq.Init.Datatypes <> S constr
R38150:38150 Poly <> n var
R38158:38161 Basics <> true constr
R38112:38114 Coq.Init.Logic <> :type_scope:x_'='_x not
R38108:38111 Basics <> true constr
R38115:38121 Basics <> beq_nat def
R38123:38123 Poly <> n var
R38392:38399 Poly <> rev_snoc prfax
prf 38410:38422 <> rev_exercise1
R38441:38444 Poly <> list ind
R38446:38448 Coq.Init.Datatypes <> nat ind
R38478:38480 Coq.Init.Logic <> :type_scope:x_'='_x not
R38476:38477 Poly <> l' var
R38481:38483 Poly <> rev def
R38485:38485 Poly <> l var
R38458:38460 Coq.Init.Logic <> :type_scope:x_'='_x not
R38457:38457 Poly <> l var
R38461:38463 Poly <> rev def
R38465:38466 Poly <> l' var
R38532:38545 Poly <> rev_involutive prfax
R38532:38545 Poly <> rev_involutive prfax
prf 39618:39635 <> unfold_example_bad
R39679:39681 Coq.Init.Logic <> :type_scope:x_'='_x not
R39675:39677 Basics <> :nat_scope:x_'+'_x not
R39668:39672 Poly <> plus3 def
R39674:39674 Poly <> n var
R39683:39685 Basics <> :nat_scope:x_'+'_x not
R39682:39682 Poly <> m var
R39658:39660 Coq.Init.Logic <> :type_scope:x_'='_x not
R39654:39656 Basics <> :nat_scope:x_'+'_x not
R39657:39657 Poly <> n var
R39661:39661 Poly <> m var
prf 40054:40067 <> unfold_example
R40111:40113 Coq.Init.Logic <> :type_scope:x_'='_x not
R40107:40109 Basics <> :nat_scope:x_'+'_x not
R40100:40104 Poly <> plus3 def
R40106:40106 Poly <> n var
R40115:40117 Basics <> :nat_scope:x_'+'_x not
R40114:40114 Poly <> m var
R40090:40092 Coq.Init.Logic <> :type_scope:x_'='_x not
R40086:40088 Basics <> :nat_scope:x_'+'_x not
R40089:40089 Poly <> n var
R40093:40093 Poly <> m var
R40153:40157 Poly <> plus3 def
prf 40374:40384 <> override_eq
R40416:40416 Poly <> X var
R40411:40413 Coq.Init.Datatypes <> nat ind
R40440:40442 Coq.Init.Logic <> :type_scope:x_'='_x not
R40423:40430 Poly <> override def
R40436:40436 Poly <> x var
R40434:40434 Poly <> k var
R40432:40432 Poly <> f var
R40439:40439 Poly <> k var
R40443:40443 Poly <> x var
R40480:40487 Poly <> override def
R40503:40514 Induction <> beq_nat_refl thm
R40503:40514 Induction <> beq_nat_refl thm
prf 40711:40722 <> override_neq
R40764:40764 Poly <> X var
R40759:40761 Coq.Init.Datatypes <> nat ind
R40833:40835 Coq.Init.Logic <> :type_scope:x_'='_x not
R40813:40820 Poly <> override def
R40827:40828 Poly <> x2 var
R40824:40825 Poly <> k2 var
R40822:40822 Poly <> f var
R40831:40832 Poly <> k1 var
R40836:40837 Poly <> x1 var
R40798:40800 Coq.Init.Logic <> :type_scope:x_'='_x not
R40785:40791 Basics <> beq_nat def
R40796:40797 Poly <> k1 var
R40793:40794 Poly <> k2 var
R40801:40805 Basics <> false constr
R40774:40776 Coq.Init.Logic <> :type_scope:x_'='_x not
R40770:40770 Poly <> f var
R40772:40773 Poly <> k1 var
R40777:40778 Poly <> x1 var
R40866:40873 Poly <> override def
prf 43661:43668 <> eq_add_S
R43686:43688 Coq.Init.Datatypes <> nat ind
R43716:43718 Coq.Init.Logic <> :type_scope:x_'='_x not
R43715:43715 Poly <> n var
R43719:43719 Poly <> m var
R43700:43702 Coq.Init.Logic <> :type_scope:x_'='_x not
R43697:43697 Coq.Init.Datatypes <> S constr
R43699:43699 Poly <> n var
R43703:43703 Coq.Init.Datatypes <> S constr
R43705:43705 Poly <> m var
prf 43788:43793 <> silly4
R43811:43813 Coq.Init.Datatypes <> nat ind
R43841:43843 Coq.Init.Logic <> :type_scope:x_'='_x not
R43840:43840 Poly <> n var
R43844:43844 Poly <> m var
R43825:43827 Coq.Init.Logic <> :type_scope:x_'='_x not
R43822:43822 Poly <> ::'['_x_','_'..'_','_x_']' not
R43824:43824 Poly <> ::'['_x_','_'..'_','_x_']' not
R43823:43823 Poly <> n var
R43828:43828 Poly <> ::'['_x_','_'..'_','_x_']' not
R43830:43830 Poly <> ::'['_x_','_'..'_','_x_']' not
R43829:43829 Poly <> m var
prf 44062:44067 <> silly5
R44087:44089 Coq.Init.Datatypes <> nat ind
R44123:44125 Coq.Init.Logic <> :type_scope:x_'='_x not
R44120:44120 Poly <> ::'['_x_','_'..'_','_x_']' not
R44122:44122 Poly <> ::'['_x_','_'..'_','_x_']' not
R44121:44121 Poly <> n var
R44126:44126 Poly <> ::'['_x_','_'..'_','_x_']' not
R44128:44128 Poly <> ::'['_x_','_'..'_','_x_']' not
R44127:44127 Poly <> m var
R44103:44105 Coq.Init.Logic <> :type_scope:x_'='_x not
R44098:44098 Poly <> ::'['_x_','_'..'_','_x_']' not
R44100:44100 Poly <> ::'['_x_','_'..'_','_x_']' not
R44102:44102 Poly <> ::'['_x_','_'..'_','_x_']' not
R44101:44101 Poly <> m var
R44099:44099 Poly <> n var
R44106:44106 Poly <> ::'['_x_','_'..'_','_x_']' not
R44108:44108 Poly <> ::'['_x_','_'..'_','_x_']' not
R44110:44110 Poly <> ::'['_x_','_'..'_','_x_']' not
R44109:44109 Poly <> o var
R44107:44107 Poly <> o var
def 44239:44246 <> sillyex1
R44277:44277 Poly <> X var
R44287:44290 Poly <> list ind
R44292:44292 Poly <> X var
R44355:44357 Coq.Init.Logic <> :type_scope:x_'='_x not
R44354:44354 Poly <> x var
R44358:44358 Poly <> y var
R44336:44338 Coq.Init.Logic <> :type_scope:x_'='_x not
R44331:44334 Poly <> ::x_'::'_x not
R44330:44330 Poly <> y var
R44335:44335 Poly <> l var
R44340:44343 Poly <> ::x_'::'_x not
R44339:44339 Poly <> x var
R44344:44344 Poly <> j var
R44312:44314 Coq.Init.Logic <> :type_scope:x_'='_x not
R44302:44305 Poly <> ::x_'::'_x not
R44301:44301 Poly <> x var
R44307:44310 Poly <> ::x_'::'_x not
R44306:44306 Poly <> y var
R44311:44311 Poly <> l var
R44316:44319 Poly <> ::x_'::'_x not
R44315:44315 Poly <> z var
R44320:44320 Poly <> j var
prf 44457:44462 <> silly6
R44478:44480 Coq.Init.Datatypes <> nat ind
R44510:44512 Coq.Init.Logic <> :type_scope:x_'='_x not
R44506:44508 Basics <> :nat_scope:x_'+'_x not
R44492:44494 Coq.Init.Logic <> :type_scope:x_'='_x not
R44489:44489 Coq.Init.Datatypes <> S constr
R44491:44491 Poly <> n var
R44495:44495 Coq.Init.Datatypes <> O constr
prf 44574:44579 <> silly7
R44597:44599 Coq.Init.Datatypes <> nat ind
R44632:44634 Coq.Init.Logic <> :type_scope:x_'='_x not
R44629:44629 Poly <> ::'['_x_','_'..'_','_x_']' not
R44631:44631 Poly <> ::'['_x_','_'..'_','_x_']' not
R44630:44630 Poly <> n var
R44635:44635 Poly <> ::'['_x_','_'..'_','_x_']' not
R44637:44637 Poly <> ::'['_x_','_'..'_','_x_']' not
R44636:44636 Poly <> m var
R44613:44615 Coq.Init.Logic <> :type_scope:x_'='_x not
R44608:44612 Basics <> false constr
R44616:44619 Basics <> true constr
def 44741:44748 <> sillyex2
R44779:44779 Poly <> X var
R44789:44792 Poly <> list ind
R44794:44794 Poly <> X var
R44853:44855 Coq.Init.Logic <> :type_scope:x_'='_x not
R44852:44852 Poly <> x var
R44856:44856 Poly <> z var
R44834:44836 Coq.Init.Logic <> :type_scope:x_'='_x not
R44829:44832 Poly <> ::x_'::'_x not
R44828:44828 Poly <> y var
R44833:44833 Poly <> l var
R44838:44841 Poly <> ::x_'::'_x not
R44837:44837 Poly <> z var
R44842:44842 Poly <> j var
R44814:44816 Coq.Init.Logic <> :type_scope:x_'='_x not
R44804:44807 Poly <> ::x_'::'_x not
R44803:44803 Poly <> x var
R44809:44812 Poly <> ::x_'::'_x not
R44808:44808 Poly <> y var
R44813:44813 Poly <> l var
R44817:44818 Poly <> ::'['_']' not
prf 45180:45190 <> eq_remove_S
R45220:45222 Coq.Init.Logic <> :type_scope:x_'='_x not
R45217:45217 Coq.Init.Datatypes <> S constr
R45219:45219 Poly <> n var
R45223:45223 Coq.Init.Datatypes <> S constr
R45225:45225 Poly <> m var
R45209:45211 Coq.Init.Logic <> :type_scope:x_'='_x not
R45208:45208 Poly <> n var
R45212:45212 Poly <> m var
prf 45574:45585 <> length_snoc'
R45612:45612 Poly <> X var
R45650:45653 Poly <> list ind
R45655:45655 Poly <> X var
R45663:45665 Coq.Init.Datatypes <> nat ind
R45712:45714 Coq.Init.Logic <> :type_scope:x_'='_x not
R45695:45700 Poly <> length def
R45703:45706 Poly <> snoc def
R45710:45710 Poly <> v var
R45708:45708 Poly <> l var
R45715:45715 Coq.Init.Datatypes <> S constr
R45717:45717 Poly <> n var
R45682:45684 Coq.Init.Logic <> :type_scope:x_'='_x not
R45674:45679 Poly <> length def
R45681:45681 Poly <> l var
R45685:45685 Poly <> n var
R45960:45970 Poly <> eq_remove_S thm
R45960:45970 Poly <> eq_remove_S thm
prf 46247:46263 <> beq_nat_eq_FAILED
R46304:46306 Coq.Init.Logic <> :type_scope:x_'='_x not
R46303:46303 Poly <> n var
R46307:46307 Poly <> m var
R46285:46287 Coq.Init.Logic <> :type_scope:x_'='_x not
R46281:46284 Basics <> true constr
R46288:46294 Basics <> beq_nat def
R46298:46298 Poly <> m var
R46296:46296 Poly <> n var
R46604:46614 Poly <> eq_remove_S thm
R46604:46614 Poly <> eq_remove_S thm
prf 47675:47684 <> beq_nat_eq
R47725:47727 Coq.Init.Logic <> :type_scope:x_'='_x not
R47724:47724 Poly <> n var
R47728:47728 Poly <> m var
R47706:47708 Coq.Init.Logic <> :type_scope:x_'='_x not
R47702:47705 Basics <> true constr
R47709:47715 Basics <> beq_nat def
R47719:47719 Poly <> m var
R47717:47717 Poly <> n var
R48088:48098 Poly <> eq_remove_S thm
R48088:48098 Poly <> eq_remove_S thm
R48945:48955 Poly <> eq_remove_S thm
prf 48966:48976 <> beq_nat_eq'
R49017:49019 Coq.Init.Logic <> :type_scope:x_'='_x not
R49016:49016 Poly <> n var
R49020:49020 Poly <> m var
R49005:49007 Coq.Init.Logic <> :type_scope:x_'='_x not
R48994:49000 Basics <> beq_nat def
R49004:49004 Poly <> m var
R49002:49002 Poly <> n var
R49008:49011 Basics <> true constr
R49187:49197 Poly <> eq_remove_S thm
R49187:49197 Poly <> eq_remove_S thm
prf 49611:49621 <> beq_nat_0_l
R49660:49662 Coq.Init.Logic <> :type_scope:x_'='_x not
R49663:49663 Poly <> n var
R49641:49643 Coq.Init.Logic <> :type_scope:x_'='_x not
R49637:49640 Basics <> true constr
R49644:49650 Basics <> beq_nat def
R49654:49654 Poly <> n var
prf 49748:49758 <> beq_nat_0_r
R49797:49799 Coq.Init.Logic <> :type_scope:x_'='_x not
R49800:49800 Poly <> n var
R49778:49780 Coq.Init.Logic <> :type_scope:x_'='_x not
R49774:49777 Basics <> true constr
R49781:49787 Basics <> beq_nat def
R49791:49791 Poly <> n var
prf 50168:50178 <> beq_nat_sym
R50196:50198 Coq.Init.Datatypes <> nat ind
R50215:50217 Coq.Init.Logic <> :type_scope:x_'='_x not
R50204:50210 Basics <> beq_nat def
R50214:50214 Poly <> m var
R50212:50212 Poly <> n var
R50218:50224 Basics <> beq_nat def
R50228:50228 Poly <> n var
R50226:50226 Poly <> m var
prf 51093:51097 <> S_inj
R51115:51117 Coq.Init.Datatypes <> nat ind
R51125:51128 Basics <> bool ind
R51181:51183 Coq.Init.Logic <> :type_scope:x_'='_x not
R51170:51176 Basics <> beq_nat def
R51180:51180 Poly <> m var
R51178:51178 Poly <> n var
R51184:51184 Poly <> b var
R51156:51158 Coq.Init.Logic <> :type_scope:x_'='_x not
R51137:51143 Basics <> beq_nat def
R51152:51152 Coq.Init.Datatypes <> S constr
R51154:51154 Poly <> m var
R51146:51146 Coq.Init.Datatypes <> S constr
R51148:51148 Poly <> n var
R51159:51159 Poly <> b var
prf 52045:52051 <> silly3'
R52067:52069 Coq.Init.Datatypes <> nat ind
R52166:52168 Coq.Init.Logic <> :type_scope:x_'='_x not
R52162:52165 Basics <> true constr
R52169:52175 Basics <> beq_nat def
R52178:52178 Coq.Init.Datatypes <> S constr
R52181:52181 Coq.Init.Datatypes <> S constr
R52183:52183 Poly <> n var
R52138:52140 Coq.Init.Logic <> :type_scope:x_'='_x not
R52134:52137 Basics <> true constr
R52141:52147 Basics <> beq_nat def
R52149:52149 Poly <> n var
R52117:52119 Coq.Init.Logic <> :type_scope:x_'='_x not
R52098:52104 Basics <> beq_nat def
R52107:52107 Coq.Init.Datatypes <> S constr
R52110:52110 Coq.Init.Datatypes <> S constr
R52112:52112 Poly <> n var
R52120:52123 Basics <> true constr
R52087:52089 Coq.Init.Logic <> :type_scope:x_'='_x not
R52076:52082 Basics <> beq_nat def
R52084:52084 Poly <> n var
R52090:52093 Basics <> true constr
prf 53027:53044 <> plus_n_n_injective
R53088:53090 Coq.Init.Logic <> :type_scope:x_'='_x not
R53087:53087 Poly <> n var
R53091:53091 Poly <> m var
R53070:53072 Coq.Init.Logic <> :type_scope:x_'='_x not
R53066:53068 Basics <> :nat_scope:x_'+'_x not
R53065:53065 Poly <> n var
R53069:53069 Poly <> n var
R53074:53076 Basics <> :nat_scope:x_'+'_x not
R53073:53073 Poly <> m var
R53077:53077 Poly <> m var
def 53629:53636 <> sillyfun
R53643:53645 Coq.Init.Datatypes <> nat ind
R53650:53653 Basics <> bool ind
R53663:53669 Basics <> beq_nat def
R53671:53671 Poly <> n var
R53696:53702 Basics <> beq_nat def
R53704:53704 Poly <> n var
R53726:53730 Basics <> false constr
R53713:53717 Basics <> false constr
R53680:53684 Basics <> false constr
prf 53742:53755 <> sillyfun_false
R53771:53773 Coq.Init.Datatypes <> nat ind
R53789:53791 Coq.Init.Logic <> :type_scope:x_'='_x not
R53779:53786 Poly <> sillyfun def
R53788:53788 Poly <> n var
R53792:53796 Basics <> false constr
R53825:53832 Poly <> sillyfun def
R53848:53854 Basics <> beq_nat def
R53848:53854 Basics <> beq_nat def
R53948:53954 Basics <> beq_nat def
R53948:53954 Basics <> beq_nat def
prf 54373:54387 <> override_shadow
R54429:54429 Poly <> X var
R54424:54426 Coq.Init.Datatypes <> nat ind
R54473:54475 Coq.Init.Logic <> :type_scope:x_'='_x not
R54436:54443 Poly <> override def
R54467:54468 Poly <> x1 var
R54464:54465 Poly <> k1 var
R54446:54453 Poly <> override def
R54460:54461 Poly <> x2 var
R54457:54458 Poly <> k1 var
R54455:54455 Poly <> f var
R54471:54472 Poly <> k2 var
R54477:54484 Poly <> override def
R54491:54492 Poly <> x1 var
R54488:54489 Poly <> k1 var
R54486:54486 Poly <> f var
R54495:54496 Poly <> k2 var
R54523:54530 Poly <> override def
R54543:54549 Basics <> beq_nat def
R54543:54549 Basics <> beq_nat def
prf 54656:54668 <> combine_split
R54688:54691 Poly <> list ind
R54695:54697 Poly <> :type_scope:x_'*'_x not
R54694:54694 Poly <> X var
R54698:54698 Poly <> Y var
R54748:54750 Coq.Init.Logic <> :type_scope:x_'='_x not
R54735:54741 Poly <> combine def
R54746:54747 Poly <> l2 var
R54743:54744 Poly <> l1 var
R54751:54751 Poly <> l var
R54718:54720 Coq.Init.Logic <> :type_scope:x_'='_x not
R54711:54715 Poly <> split def
R54717:54717 Poly <> l var
R54721:54721 Poly <> ::'('_x_','_x_')' not
R54724:54725 Poly <> ::'('_x_','_x_')' not
R54728:54728 Poly <> ::'('_x_','_x_')' not
R54722:54723 Poly <> l1 var
R54726:54727 Poly <> l2 var
R54882:54886 Poly <> split def
R54882:54886 Poly <> split def
def 56360:56368 <> sillyfun1
R56375:56377 Coq.Init.Datatypes <> nat ind
R56382:56385 Basics <> bool ind
R56395:56401 Basics <> beq_nat def
R56403:56403 Poly <> n var
R56427:56433 Basics <> beq_nat def
R56435:56435 Poly <> n var
R56456:56460 Basics <> false constr
R56444:56447 Basics <> true constr
R56412:56415 Basics <> true constr
prf 56724:56743 <> sillyfun1_odd_FAILED
R56759:56761 Coq.Init.Datatypes <> nat ind
R56803:56805 Coq.Init.Logic <> :type_scope:x_'='_x not
R56797:56800 Basics <> oddb def
R56802:56802 Poly <> n var
R56806:56809 Basics <> true constr
R56781:56783 Coq.Init.Logic <> :type_scope:x_'='_x not
R56770:56778 Poly <> sillyfun1 def
R56780:56780 Poly <> n var
R56784:56787 Basics <> true constr
R56841:56849 Poly <> sillyfun1 def
R56870:56876 Basics <> beq_nat def
R56870:56876 Basics <> beq_nat def
prf 57820:57832 <> sillyfun1_odd
R57848:57850 Coq.Init.Datatypes <> nat ind
R57892:57894 Coq.Init.Logic <> :type_scope:x_'='_x not
R57886:57889 Basics <> oddb def
R57891:57891 Poly <> n var
R57895:57898 Basics <> true constr
R57870:57872 Coq.Init.Logic <> :type_scope:x_'='_x not
R57859:57867 Poly <> sillyfun1 def
R57869:57869 Poly <> n var
R57873:57876 Basics <> true constr
R57930:57938 Poly <> sillyfun1 def
R57960:57966 Basics <> beq_nat def
R57960:57966 Basics <> beq_nat def
R58536:58545 Poly <> beq_nat_eq thm
R58536:58545 Poly <> beq_nat_eq thm
R58845:58851 Basics <> beq_nat def
R58845:58851 Basics <> beq_nat def
R58923:58932 Poly <> beq_nat_eq thm
R58923:58932 Poly <> beq_nat_eq thm
R59043:59052 Poly <> beq_nat_eq thm
prf 59093:59114 <> bool_fn_applied_thrice
R59141:59144 Basics <> bool ind
R59133:59136 Basics <> bool ind
R59152:59155 Basics <> bool ind
R59173:59175 Coq.Init.Logic <> :type_scope:x_'='_x not
R59162:59162 Poly <> f var
R59165:59165 Poly <> f var
R59168:59168 Poly <> f var
R59170:59170 Poly <> b var
R59176:59176 Poly <> f var
R59178:59178 Poly <> b var
R59299:59303 Basics <> false constr
R59299:59303 Basics <> false constr
R59422:59425 Basics <> true constr
R59422:59425 Basics <> true constr
prf 59628:59640 <> override_same
R59679:59679 Poly <> X var
R59674:59676 Coq.Init.Datatypes <> nat ind
R59722:59724 Coq.Init.Logic <> :type_scope:x_'='_x not
R59702:59709 Poly <> override def
R59716:59717 Poly <> x1 var
R59713:59714 Poly <> k1 var
R59711:59711 Poly <> f var
R59720:59721 Poly <> k2 var
R59725:59725 Poly <> f var
R59727:59728 Poly <> k2 var
R59689:59691 Coq.Init.Logic <> :type_scope:x_'='_x not
R59685:59685 Poly <> f var
R59687:59688 Poly <> k1 var
R59692:59693 Poly <> x1 var
R59755:59762 Poly <> override def
R59775:59781 Basics <> beq_nat def
R59775:59781 Basics <> beq_nat def
R59826:59835 Poly <> beq_nat_eq thm
R59826:59835 Poly <> beq_nat_eq thm
prf 60137:60151 <> filter_exercise
R60186:60189 Basics <> bool ind
R60181:60181 Poly <> X var
R60226:60226 Poly <> X var
R60237:60240 Poly <> list ind
R60242:60242 Poly <> X var
R60289:60291 Coq.Init.Logic <> :type_scope:x_'='_x not
R60283:60286 Poly <> test var
R60288:60288 Poly <> x var
R60292:60295 Basics <> true constr
R60264:60266 Coq.Init.Logic <> :type_scope:x_'='_x not
R60251:60256 Poly <> filter def
R60263:60263 Poly <> l var
R60258:60261 Poly <> test var
R60268:60271 Poly <> ::x_'::'_x not
R60267:60267 Poly <> x var
R60272:60273 Poly <> lf var
def 60726:60741 <> trans_eq_example
R60767:60769 Coq.Init.Datatypes <> nat ind
R60827:60829 Coq.Init.Logic <> :type_scope:x_'='_x not
R60822:60822 Poly <> ::'['_x_','_'..'_','_x_']' not
R60824:60824 Poly <> ::'['_x_','_'..'_','_x_']' not
R60826:60826 Poly <> ::'['_x_','_'..'_','_x_']' not
R60825:60825 Poly <> b var
R60823:60823 Poly <> a var
R60830:60830 Poly <> ::'['_x_','_'..'_','_x_']' not
R60832:60832 Poly <> ::'['_x_','_'..'_','_x_']' not
R60834:60834 Poly <> ::'['_x_','_'..'_','_x_']' not
R60833:60833 Poly <> f var
R60831:60831 Poly <> e var
R60805:60807 Coq.Init.Logic <> :type_scope:x_'='_x not
R60800:60800 Poly <> ::'['_x_','_'..'_','_x_']' not
R60802:60802 Poly <> ::'['_x_','_'..'_','_x_']' not
R60804:60804 Poly <> ::'['_x_','_'..'_','_x_']' not
R60803:60803 Poly <> d var
R60801:60801 Poly <> c var
R60808:60808 Poly <> ::'['_x_','_'..'_','_x_']' not
R60810:60810 Poly <> ::'['_x_','_'..'_','_x_']' not
R60812:60812 Poly <> ::'['_x_','_'..'_','_x_']' not
R60811:60811 Poly <> f var
R60809:60809 Poly <> e var
R60783:60785 Coq.Init.Logic <> :type_scope:x_'='_x not
R60778:60778 Poly <> ::'['_x_','_'..'_','_x_']' not
R60780:60780 Poly <> ::'['_x_','_'..'_','_x_']' not
R60782:60782 Poly <> ::'['_x_','_'..'_','_x_']' not
R60781:60781 Poly <> b var
R60779:60779 Poly <> a var
R60786:60786 Poly <> ::'['_x_','_'..'_','_x_']' not
R60788:60788 Poly <> ::'['_x_','_'..'_','_x_']' not
R60790:60790 Poly <> ::'['_x_','_'..'_','_x_']' not
R60789:60789 Poly <> d var
R60787:60787 Poly <> c var
prf 61086:61093 <> trans_eq
R61122:61122 Poly <> X var
R61147:61149 Coq.Init.Logic <> :type_scope:x_'='_x not
R61146:61146 Poly <> n var
R61150:61150 Poly <> o var
R61138:61140 Coq.Init.Logic <> :type_scope:x_'='_x not
R61137:61137 Poly <> m var
R61141:61141 Poly <> o var
R61129:61131 Coq.Init.Logic <> :type_scope:x_'='_x not
R61128:61128 Poly <> n var
R61132:61132 Poly <> m var
def 61406:61422 <> trans_eq_example'
R61448:61450 Coq.Init.Datatypes <> nat ind
R61508:61510 Coq.Init.Logic <> :type_scope:x_'='_x not
R61503:61503 Poly <> ::'['_x_','_'..'_','_x_']' not
R61505:61505 Poly <> ::'['_x_','_'..'_','_x_']' not
R61507:61507 Poly <> ::'['_x_','_'..'_','_x_']' not
R61506:61506 Poly <> b var
R61504:61504 Poly <> a var
R61511:61511 Poly <> ::'['_x_','_'..'_','_x_']' not
R61513:61513 Poly <> ::'['_x_','_'..'_','_x_']' not
R61515:61515 Poly <> ::'['_x_','_'..'_','_x_']' not
R61514:61514 Poly <> f var
R61512:61512 Poly <> e var
R61486:61488 Coq.Init.Logic <> :type_scope:x_'='_x not
R61481:61481 Poly <> ::'['_x_','_'..'_','_x_']' not
R61483:61483 Poly <> ::'['_x_','_'..'_','_x_']' not
R61485:61485 Poly <> ::'['_x_','_'..'_','_x_']' not
R61484:61484 Poly <> d var
R61482:61482 Poly <> c var
R61489:61489 Poly <> ::'['_x_','_'..'_','_x_']' not
R61491:61491 Poly <> ::'['_x_','_'..'_','_x_']' not
R61493:61493 Poly <> ::'['_x_','_'..'_','_x_']' not
R61492:61492 Poly <> f var
R61490:61490 Poly <> e var
R61464:61466 Coq.Init.Logic <> :type_scope:x_'='_x not
R61459:61459 Poly <> ::'['_x_','_'..'_','_x_']' not
R61461:61461 Poly <> ::'['_x_','_'..'_','_x_']' not
R61463:61463 Poly <> ::'['_x_','_'..'_','_x_']' not
R61462:61462 Poly <> b var
R61460:61460 Poly <> a var
R61467:61467 Poly <> ::'['_x_','_'..'_','_x_']' not
R61469:61469 Poly <> ::'['_x_','_'..'_','_x_']' not
R61471:61471 Poly <> ::'['_x_','_'..'_','_x_']' not
R61470:61470 Poly <> d var
R61468:61468 Poly <> c var
R62000:62000 Poly <> ::'['_x_','_'..'_','_x_']' not
R62002:62002 Poly <> ::'['_x_','_'..'_','_x_']' not
R62004:62004 Poly <> ::'['_x_','_'..'_','_x_']' not
R61982:61989 Poly <> trans_eq thm
R62000:62000 Poly <> ::'['_x_','_'..'_','_x_']' not
R62002:62002 Poly <> ::'['_x_','_'..'_','_x_']' not
R62004:62004 Poly <> ::'['_x_','_'..'_','_x_']' not
R61982:61989 Poly <> trans_eq thm
def 62318:62334 <> trans_eq_exercise
R62356:62358 Coq.Init.Datatypes <> nat ind
R62412:62412 Coq.Init.Logic <> :type_scope:x_'='_x not
R62418:62422 Coq.Init.Logic <> :type_scope:x_'='_x not
R62433:62433 Coq.Init.Logic <> :type_scope:x_'='_x not
R62414:62416 Basics <> :nat_scope:x_'+'_x not
R62413:62413 Poly <> n var
R62417:62417 Poly <> p var
R62423:62430 Basics <> minustwo def
R62432:62432 Poly <> o var
R62392:62392 Coq.Init.Logic <> :type_scope:x_'='_x not
R62398:62401 Coq.Init.Logic <> :type_scope:x_'='_x not
R62394:62396 Basics <> :nat_scope:x_'+'_x not
R62393:62393 Poly <> n var
R62397:62397 Poly <> p var
R62402:62402 Poly <> m var
R62368:62371 Coq.Init.Logic <> :type_scope:x_'='_x not
R62382:62382 Coq.Init.Logic <> :type_scope:x_'='_x not
R62367:62367 Poly <> m var
R62372:62379 Basics <> minustwo def
R62381:62381 Poly <> o var
R62518:62527 Poly <> beq_nat_eq thm
prf 62538:62550 <> beq_nat_trans
R62622:62624 Coq.Init.Logic <> :type_scope:x_'='_x not
R62618:62621 Basics <> true constr
R62625:62631 Basics <> beq_nat def
R62635:62635 Poly <> p var
R62633:62633 Poly <> n var
R62598:62600 Coq.Init.Logic <> :type_scope:x_'='_x not
R62594:62597 Basics <> true constr
R62601:62607 Basics <> beq_nat def
R62611:62611 Poly <> p var
R62609:62609 Poly <> m var
R62574:62576 Coq.Init.Logic <> :type_scope:x_'='_x not
R62570:62573 Basics <> true constr
R62577:62583 Basics <> beq_nat def
R62587:62587 Poly <> m var
R62585:62585 Poly <> n var
R62680:62689 Poly <> beq_nat_eq thm
R62680:62689 Poly <> beq_nat_eq thm
prf 62746:62761 <> override_permute
R62806:62806 Poly <> X var
R62801:62803 Coq.Init.Datatypes <> nat ind
R62877:62879 Coq.Init.Logic <> :type_scope:x_'='_x not
R62840:62847 Poly <> override def
R62871:62872 Poly <> x1 var
R62868:62869 Poly <> k1 var
R62850:62857 Poly <> override def
R62864:62865 Poly <> x2 var
R62861:62862 Poly <> k2 var
R62859:62859 Poly <> f var
R62875:62876 Poly <> k3 var
R62881:62888 Poly <> override def
R62912:62913 Poly <> x2 var
R62909:62910 Poly <> k2 var
R62891:62898 Poly <> override def
R62905:62906 Poly <> x1 var
R62902:62903 Poly <> k1 var
R62900:62900 Poly <> f var
R62916:62917 Poly <> k3 var
R62817:62819 Coq.Init.Logic <> :type_scope:x_'='_x not
R62812:62816 Basics <> false constr
R62820:62826 Basics <> beq_nat def
R62831:62832 Poly <> k1 var
R62828:62829 Poly <> k2 var
R62944:62951 Poly <> override def
R62964:62970 Basics <> beq_nat def
R62964:62970 Basics <> beq_nat def
R62999:63005 Basics <> beq_nat def
R62999:63005 Basics <> beq_nat def
R63048:63057 Poly <> beq_nat_eq thm
R63048:63057 Poly <> beq_nat_eq thm
R65615:65618 Poly <> fold def
def 65632:65642 <> fold_length
R65660:65663 Poly <> list ind
R65665:65665 Poly <> X var
R65670:65672 Coq.Init.Datatypes <> nat ind
R65679:65682 Poly <> fold def
R65701:65701 Poly <> l var
R65696:65696 Coq.Init.Datatypes <> S constr
R65698:65698 Poly <> n var
def 65715:65731 <> test_fold_length1
R65754:65756 Coq.Init.Logic <> :type_scope:x_'='_x not
R65735:65745 Poly <> fold_length def
R65747:65747 Poly <> ::'['_x_','_'..'_','_x_']' not
R65749:65749 Poly <> ::'['_x_','_'..'_','_x_']' not
R65751:65751 Poly <> ::'['_x_','_'..'_','_x_']' not
R65753:65753 Poly <> ::'['_x_','_'..'_','_x_']' not
prf 65842:65860 <> fold_length_correct
R65878:65881 Poly <> list ind
R65883:65883 Poly <> X var
R65902:65904 Coq.Init.Logic <> :type_scope:x_'='_x not
R65889:65899 Poly <> fold_length def
R65901:65901 Poly <> l var
R65905:65910 Poly <> length def
R65912:65912 Poly <> l var
R65979:65989 Poly <> fold_length def
R66023:66033 Poly <> fold_length def
def 66201:66208 <> fold_map
R66231:66231 Poly <> Y var
R66226:66226 Poly <> X var
R66239:66242 Poly <> list ind
R66244:66244 Poly <> X var
R66249:66252 Poly <> list ind
R66254:66254 Poly <> Y var
R66261:66264 Poly <> fold def
R66294:66295 Poly <> ::'['_']' not
R66292:66292 Poly <> l var
R66279:66279 Poly <> ::x_'::'_x not
R66283:66287 Poly <> ::x_'::'_x not
R66280:66280 Poly <> f var
R66282:66282 Poly <> x var
R66288:66289 Poly <> ys var
prf 66396:66411 <> fold_map_correct
R66445:66445 Poly <> Y var
R66440:66440 Poly <> X var
R66453:66456 Poly <> list ind
R66458:66458 Poly <> X var
R66473:66475 Coq.Init.Logic <> :type_scope:x_'='_x not
R66466:66468 Poly <> map def
R66472:66472 Poly <> l var
R66470:66470 Poly <> f var
R66476:66483 Poly <> fold_map def
R66487:66487 Poly <> l var
R66485:66485 Poly <> f var
R66566:66573 Poly <> fold_map def
R66604:66611 Poly <> fold_map def
mod 66669:66677 <> MumbleBaz
ind 66809:66814 MumbleBaz mumble
constr 66830:66830 MumbleBaz a
constr 66845:66845 MumbleBaz b
constr 66877:66877 MumbleBaz c
R66834:66839 Poly <> mumble ind
R66866:66871 Poly <> mumble ind
R66859:66861 Coq.Init.Datatypes <> nat ind
R66849:66854 Poly <> mumble ind
R66881:66886 Poly <> mumble ind
ind 66899:66905 MumbleBaz grumble
constr 66930:66930 MumbleBaz d
constr 66958:66958 MumbleBaz e
R66944:66950 Poly <> grumble ind
R66934:66939 Poly MumbleBaz mumble ind
R66967:66973 Poly <> grumble ind
ind 67395:67397 MumbleBaz baz
constr 67414:67414 MumbleBaz x
constr 67434:67434 MumbleBaz y
R67425:67427 Poly <> baz ind
R67418:67420 Poly <> baz ind
R67453:67455 Poly <> baz ind
R67445:67448 Basics <> bool ind
R67438:67440 Poly <> baz ind
R67531:67539 Poly MumbleBaz <> mod
